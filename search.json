[{"path":"https://umccr.github.io/gpgr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 University Melbourne Centre Cancer Research - Genomics Platform Group Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://umccr.github.io/gpgr/articles/chord.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"CHORD","text":"CHORD: Classifier HOmologous Recombination Deficiency (https://github.com/UMCUGenetics/CHORD) CHORD random forest model uses relative counts somatic mutation contexts predict homologous recombination deficiency (HRD). primary contexts used CHORD deletions flanking microhomology 1-100kb structural duplications. Additionally, 1-100kb structural duplications used distinguish BRCA1-type HRD BRCA2-type HRD.","code":""},{"path":"https://umccr.github.io/gpgr/articles/chord.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"CHORD","text":"CHORD takes input somatic VCFs containing SNVs, INDELs SVs. former two can VCF. also able take data.frames variants input. Due annotation size processed Manta VCFs, prefer feed pre-processed SV data.frame instead VCF, thus use gpgr::chord_mantavcf2df function.","code":"snvindel_vcf <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") sv_vcf <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\")"},{"path":"https://umccr.github.io/gpgr/articles/chord.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"CHORD","text":"","code":"sv_df <- gpgr::chord_mantavcf2df(sv_vcf) # prepare SV VCF as data.frame res <- gpgr::chord_run(   vcf.snv = snvindel_vcf,   df.sv = sv_df,   sv.caller = \"manta\",   # vcf.sv = sv_vcf, # alternative   sample.name = \"sample_A\",   ref.genome = \"hg38\",   verbose = TRUE ) #>  #> #====== Loading variants from vcfs ======# #>  #> ## SNVs #> Warning in fun(libname, pkgname):  #>    No reference genome loaded. Please install and load a BSgenome. #>    For example: #>       install.packages('BiocManager') #>       BiocManager::install('BSgenome.Hsapiens.UCSC.hg19') #>       library('BSgenome.Hsapiens.UCSC.hg19') #>  #>    Then specify the BSgenome to the ref.genome arguemnts to the relevant functions. #>    For example: #>       extractSigsSnv(..., ref.genome=BSgenome.Hsapiens.UCSC.hg19) #> Reading in vcf file... #> Converting chrom name style to style in ref.genome... #> Loading required package: BiocGenerics #>  #> Attaching package: 'BiocGenerics' #> The following objects are masked from 'package:dplyr': #>  #>     combine, intersect, setdiff, union #> The following objects are masked from 'package:stats': #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from 'package:base': #>  #>     anyDuplicated, append, as.data.frame, basename, cbind, colnames, #>     dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep, #>     grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget, #>     order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank, #>     rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #> Loading required package: stats4 #>  #> Attaching package: 'S4Vectors' #> The following objects are masked from 'package:dplyr': #>  #>     first, rename #> The following objects are masked from 'package:base': #>  #>     expand.grid, I, unname #>  #> Attaching package: 'IRanges' #> The following objects are masked from 'package:dplyr': #>  #>     collapse, desc, slice #>  #> ## Indels #> vcf file is the same for both SNVs and indels. Skipping reading vcf for indels #>  #> ## SVs #>  #> #====== Counting mutation contexts ======# #>  #> ## Single base substitutions #> Loading variants... #> Initializing SNV signature output vector... #> Removing rows with multiple ALT sequences... #> Subsetting for SNVs... #> Getting SNV trinucleotide contexts... #> Converting trinucleotide contexts to substitution contexts... #> Counting substitution context occurrences... #> Returning context counts... #>  #> ## Indel contexts (types x lengths) #> Loading variants... #> Removing rows with multiple ALT sequences... #> Determining indel type... #> Initializing indel signature output vector... #> Determining indel length and sequence... #> Determining the start/end positions for the left/right flanks of each indel... #> Retrieving flanking sequences... #> Calculating the number of copies of the indel sequence are present in the 3' flanking sequence... #> Calculating the (max) number of bases that are homologous to the 5'/3' flanking sequence... #> Determining indel contexts... #> Counting indel context occurrences... #> Returning indel context counts... #>  #> ## SV contexts (types x lengths) #> Creating SV type/length lookup table... #> Counting DEL, DUP, and INV context occurrences... #> Counting TRA occurrences... #> Returning SV contexts... #>  #> #====== Exporting output =========# #> output.path not specified. Directly returning output #>"},{"path":"https://umccr.github.io/gpgr/articles/chord.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"CHORD","text":"CHORD results. Sample rows contexts counts.","code":"str(res, list.len = 4) #> List of 2 #>  $ contexts  : num [1, 1:145] 123 82 18 91 92 98 21 94 51 55 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr \"sample_A\" #>   .. ..$ : chr [1:145] \"A[C>A]A\" \"A[C>A]C\" \"A[C>A]G\" \"A[C>A]T\" ... #>  $ prediction:'data.frame':  1 obs. of  17 variables: #>   ..$ sample           : chr \"sample_A\" #>   ..$ p_hrd            : num 0.804 #>   ..$ hr_status        : chr \"HR_deficient\" #>   ..$ hrd_type         : chr \"BRCA2_type\" #>   .. [list output truncated]  cbind(var = colnames(res$prediction), value = unlist(res$prediction[1, ])) |>   dplyr::as_tibble(.name_repair = \"check_unique\") |>   knitr::kable(format = \"html\", caption = \"CHORD results.\") # grab first and last few of the contexts col_ind <- c(1:6, (ncol(res$contexts) - 10):ncol(res$contexts)) res$contexts |>   as.data.frame() |>   t() |>   dplyr::as_tibble(rownames = \"context\", .name_repair = \"check_unique\") |>   dplyr::mutate(n = row_number()) |>   dplyr::select(n, dplyr::everything()) |>   dplyr::slice(col_ind) |>   knitr::kable(format = \"html\", caption = \"Sample of rows from contexts counts.\")"},{"path":"https://umccr.github.io/gpgr/articles/chord.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"CHORD","text":"Main packages used vignette. Platform information.","code":""},{"path":"https://umccr.github.io/gpgr/articles/hrdetect.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"HRDetect","text":"HRDetect: Homologous Recombination Deficiency Detect (https://github.com/Nik-Zainal-Group/signature.tools.lib)","code":""},{"path":"https://umccr.github.io/gpgr/articles/hrdetect.html","id":"data","dir":"Articles","previous_headings":"","what":"Data","title":"HRDetect","text":"HRDetect takes input somatic SNV, INDEL, SV CNV files. made somewhat easier feed SNV/INDEL Manta SV VCFs, together PURPLE somatic CNV files, gpgr::hrdetect_run wrapper.","code":"snvindel_vcf <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") sv_vcf <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") cnv_tsv <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\")"},{"path":"https://umccr.github.io/gpgr/articles/hrdetect.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"HRDetect","text":"","code":"res <- gpgr::hrdetect_run(   nm = \"sample_A\",   snvindel_vcf = snvindel_vcf,   sv_vcf = sv_vcf,   cnv_tsv = cnv_tsv,   genome = \"hg38\",   snvoutdir = tempdir() ) #> [info HRDetect_pipeline] Single Nucleotide Variations #> [info HRDetect_pipeline] Structural Variants (Rearrangements) #> [info HRDetect_pipeline] Some samples in the input data_matrix do not have the exposures for SV3 and SV5, checking if the user supplied SV catalogues or BEDPE files for those samples. #> [info HRDetect_pipeline] Rearrangement signatures exposures will be estiamated for the following samples: sample_A #> [info HRDetect_pipeline] Running Signature fit with 100 bootstraps. Increase sparsity by removing exposures with 5% threshold of total mutations and 0.05 threshold of p-value, i.e. exposure of a signature in a sample is set to zero if the probability of having less than 5% of total mutations assigned to that signature is greather than 0.05. #> [info HRDetect_pipeline] Deletions at Micro-homology (Indels) #> [info HRDetect_pipeline] HRD-LOH index (CNV) #> [info HRDetect_pipeline] Computing HRDetect score and feature contributions for the following samples: sample_A #> [info HRDetect_pipeline] HRDetect pipeline completed!"},{"path":"https://umccr.github.io/gpgr/articles/hrdetect.html","id":"results","dir":"Articles","previous_headings":"","what":"Results","title":"HRDetect","text":"HRDetect results.","code":"cbind(var = colnames(res), value = unlist(res[1, ])) |>   dplyr::as_tibble(.name_repair = \"check_unique\") |>   knitr::kable(format = \"html\", caption = \"HRDetect results.\")"},{"path":"https://umccr.github.io/gpgr/articles/hrdetect.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"HRDetect","text":"Main packages used vignette. Platform information.","code":""},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"LINX","text":"LINX: annotation, interpretation visualisation tool structural variants https://github.com/hartwigmedical/hmftools/tree/master/linx. groups SV calls together events inputs: GRIDSS SVs, PURPLE CNVs, gene panel, known fusions/fragile sites/LINEs","code":""},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"annotations","dir":"Articles","previous_headings":"Table Outputs","what":"Annotations","title":"LINX","text":"additional annotations non PON filtered break junction svs.tsv","code":"system.file(\"extdata/linx/tables/linx.svs.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_svs_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"breakends","dir":"Articles","previous_headings":"Table Outputs","what":"Breakends","title":"LINX","text":"impact non PON filtered break junction overlapping gene breakend.tsv","code":"system.file(\"extdata/linx/tables/linx.breakend.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_breakend_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"clusters","dir":"Articles","previous_headings":"Table Outputs","what":"Clusters","title":"LINX","text":"clustering non PON filtered SV events resolved classification. clusters.tsv","code":"system.file(\"extdata/linx/tables/linx.clusters.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_clusters_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"links","dir":"Articles","previous_headings":"Table Outputs","what":"Links","title":"LINX","text":"segments joining break junction pairs predicted linked phased cis derivative chromosome. links.tsv","code":"system.file(\"extdata/linx/tables/linx.links.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_links_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"fusions","dir":"Articles","previous_headings":"Table Outputs","what":"Fusions","title":"LINX","text":"inframe outframe fusions predicted sample including HMF fusion knowledgebase annotations. fusion.tsv","code":"system.file(\"extdata/linx/tables/linx.fusion.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_fusion_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"driver-catalog","dir":"Articles","previous_headings":"Table Outputs","what":"Driver Catalog","title":"LINX","text":"Reproduction driver catalog produced PURPLE homozygous disruption events appended. driver.catalog.tsv","code":"system.file(\"extdata/linx/tables/linx.driver.catalog.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_drivercatalog_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"drivers","dir":"Articles","previous_headings":"Table Outputs","what":"Drivers","title":"LINX","text":"Linkage drivers driver catalog SV cluster contributed drivers including LOH, deletion, disruption amplification events. drivers.tsv","code":"system.file(\"extdata/linx/tables/linx.drivers.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_drivers_read() |>   dt_table()"},{"path":[]},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"copy-number","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"Copy Number","title":"LINX","text":"linx.vis_copy_number.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_copy_number.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_viscopynumber_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"fusion","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"Fusion","title":"LINX","text":"linx.vis_fusion.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_fusion.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_visfusion_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"gene-exon","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"Gene Exon","title":"LINX","text":"linx.vis_gene_exon.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_gene_exon.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_visgeneexon_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"protein-domain","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"Protein Domain","title":"LINX","text":"linx.vis_protein_domain.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_protein_domain.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_visproteindomain_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"segments","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"Segments","title":"LINX","text":"linx.vis_segments.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_segments.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_vissegments_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"sv-data","dir":"Articles","previous_headings":"Table ‘vis’ outputs","what":"SV Data","title":"LINX","text":"linx.vis_sv_data.tsv","code":"system.file(\"extdata/linx/tables/linx.vis_sv_data.tsv.gz\", package = \"gpgr\") |>   gpgr::linx_vissvdata_read() |>   dt_table()"},{"path":"https://umccr.github.io/gpgr/articles/linx.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"LINX","text":"Main packages used vignette. Platform information.","code":""},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"data-preparation","dir":"Articles","previous_headings":"","what":"Data Preparation","title":"MutationalPatterns","text":"","code":"params <- list(   vcf = system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\"),   nm = \"sampleA\",   outdir = \"outputs\" )  gr <- MutationalPatterns::read_vcfs_as_granges(   vcf_files = params$vcf,   sample_names = params$nm,   genome = ref_genome,   group = \"auto+sex\",   type = \"all\" )"},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"plots","dir":"Articles","previous_headings":"SNVs (SBS)","what":"Plots","title":"MutationalPatterns","text":"","code":"snv_counts <- gpgr::sig_count_snv(vcf_gr = gr, ref_genome = ref_genome) #> Any neighbouring SNVs will be merged into DBS/MBS variants. #> Set the 'predefined_dbs_mbs' to 'TRUE' if you don't want this. p_snvs <- gpgr::sig_plot_snv(   gr_snv = snv_counts$gr_snv, snv_counts = snv_counts$snv_counts,   ref_genome = ref_genome ) p_snvs$p_river + p_snvs$p_heatmap + p_snvs$p_spectrum + p_snvs$p_96_profile + patchwork::plot_layout(ncol = 1) #> Warning: The `.dots` argument of `group_by()` is deprecated as of dplyr 1.0.0. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was generated."},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"signature-contributions","dir":"Articles","previous_headings":"SNVs (SBS)","what":"Signature Contributions","title":"MutationalPatterns","text":"","code":"sigs_snv_2015 <-   gpgr::cosmic_signatures_2015 |>   {     \\(sigs) gpgr::sig_contribution(mut_mat = snv_counts$snv_counts, signatures = sigs)   }()  sigs_snv_2020 <-   MutationalPatterns::get_known_signatures(     muttype = \"snv\",     incl_poss_artifacts = TRUE   ) |>   {     \\(sigs) gpgr::sig_contribution(mut_mat = snv_counts$snv_counts, signatures = sigs)   }()  sigs_snv_2015 |>   gpgr::sig_contribution_table(type = \"Sig\", outdir = params$outdir) |>   knitr::kable(format = \"html\") |>   kableExtra::kable_styling(c(\"hover\", \"striped\"), font_size = 12) |>   kableExtra::scroll_box(height = \"400px\") sigs_snv_2020 |>   gpgr::sig_contribution_table(type = \"SBS\", outdir = params$outdir) |>   knitr::kable(format = \"html\") |>   kableExtra::kable_styling(c(\"hover\", \"striped\"), font_size = 12) |>   kableExtra::scroll_box(height = \"400px\")"},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"plots-1","dir":"Articles","previous_headings":"DBS","what":"Plots","title":"MutationalPatterns","text":"","code":"dbs_counts <- gpgr::sig_count_dbs(vcf_gr = gr) #> Any neighbouring SNVs will be merged into DBS/MBS variants. #> Set the 'predefined_dbs_mbs' to 'TRUE' if you don't want this. p_dbs <- gpgr::sig_plot_dbs(dbs_counts = dbs_counts) p_dbs$p_dbs_main / p_dbs$p_dbs_cont"},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"signature-contributions-1","dir":"Articles","previous_headings":"DBS","what":"Signature Contributions","title":"MutationalPatterns","text":"","code":"sigs_dbs <-   MutationalPatterns::get_known_signatures(muttype = \"dbs\") |>   {     \\(sigs) gpgr::sig_contribution(mut_mat = dbs_counts, signatures = sigs)   }() sigs_dbs |>   gpgr::sig_contribution_table(type = \"DBS\", outdir = params$outdir) |>   knitr::kable(format = \"html\") |>   kableExtra::kable_styling(c(\"hover\", \"striped\"), font_size = 12) |>   kableExtra::scroll_box(height = \"400px\")"},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"plots-2","dir":"Articles","previous_headings":"INDELs","what":"Plots","title":"MutationalPatterns","text":"","code":"indel_counts <- gpgr::sig_count_indel(vcf_gr = gr, ref_genome = ref_genome) p_indels <- gpgr::sig_plot_indel(indel_counts = indel_counts) p_indels$p_indel_main / p_indels$p_indel_cont"},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"signature-contributions-2","dir":"Articles","previous_headings":"INDELs","what":"Signature Contributions","title":"MutationalPatterns","text":"","code":"sigs_indel <-   MutationalPatterns::get_known_signatures(muttype = \"indel\") |>   {     \\(sigs) gpgr::sig_contribution(mut_mat = indel_counts, signatures = sigs)   }() sigs_indel |>   gpgr::sig_contribution_table(type = \"ID\", outdir = params$outdir) |>   knitr::kable(format = \"html\") |>   kableExtra::kable_styling(c(\"hover\", \"striped\"), font_size = 12) |>   kableExtra::scroll_box(height = \"400px\")"},{"path":"https://umccr.github.io/gpgr/articles/mutationalpatterns.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"MutationalPatterns","text":"Main packages used vignette. Platform information.","code":""},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"PURPLE","text":"PURPLE: Purity Ploidy Estimator (https://github.com/hartwigmedical/hmftools/tree/master/purple) PURPLE combines B-allele frequency, read depth ratios, small variants structural variants estimate purity copy number profile tumor sample. outputs several files, displayed .","code":""},{"path":[]},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"somatic-cnvs-per-chromosome","dir":"Articles","previous_headings":"Data Munging","what":"Somatic CNVs (per chromosome)","title":"PURPLE","text":"PURPLE Somatic CNVs (per chromosome) Columns. PURPLE Somatic CNVs (per chromosome) Summary Table.","code":"cnv_som <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") |>   gpgr::purple_cnv_som_process() cnv_som$descr |>   knitr::kable(format = \"html\", caption = \"PURPLE Somatic CNVs (per chromosome) Columns.\") cnv_som$tab |>   dplyr::slice(1:10) |>   knitr::kable(format = \"html\", caption = \"PURPLE Somatic CNVs (per chromosome) Summary Table.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"somatic-cnvs-per-gene","dir":"Articles","previous_headings":"Data Munging","what":"Somatic CNVs (per gene)","title":"PURPLE","text":"PURPLE Somatic CNVs (per gene) Columns. PURPLE Somatic CNVs (per gene) Summary Table.","code":"umccr_key_genes <- system.file(\"extdata/ref/umccr_cancer_genes_2019-03-20.tsv\", package = \"gpgr\") cnv_som_gene <- system.file(\"extdata/purple/purple.cnv.gene.tsv\", package = \"gpgr\") |>   gpgr::purple_cnv_som_gene_process(g = umccr_key_genes) cnv_som_gene$descr |>   knitr::kable(format = \"html\", caption = \"PURPLE Somatic CNVs (per gene) Columns.\") cnv_som_gene$tab |>   dplyr::slice(1:10) |>   knitr::kable(format = \"html\", caption = \"PURPLE Somatic CNVs (per gene) Summary Table.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"germline-cnvs-per-chromosome","dir":"Articles","previous_headings":"Data Munging","what":"Germline CNVs (per chromosome)","title":"PURPLE","text":"PURPLE Germline CNVs (per chromosome) Columns. PURPLE Germline CNVs (per chromosome) Summary Table.","code":"cnv_germ <- system.file(\"extdata/purple/purple.cnv.germline.tsv\", package = \"gpgr\") |>   gpgr::purple_cnv_germ_process() cnv_germ$descr |>   knitr::kable(format = \"html\", caption = \"PURPLE Germline CNVs (per chromosome) Columns.\") cnv_germ$tab |>   dplyr::slice(1:10) |>   knitr::kable(format = \"html\", caption = \"PURPLE Germline CNVs (per chromosome) Summary Table.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"purity","dir":"Articles","previous_headings":"Data Munging","what":"Purity","title":"PURPLE","text":"PURPLE Purity Summary Table.","code":"purity <- system.file(\"extdata/purple/purple.purity.tsv\", package = \"gpgr\") |>   gpgr::purple_purity_read()  purity$summary |>   knitr::kable(format = \"html\", caption = \"PURPLE Purity Summary Table.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"kataegis","dir":"Articles","previous_headings":"Data Munging","what":"Kataegis","title":"PURPLE","text":"PURPLE Kataegis Table. Kataegis column description.","code":"kat <- system.file(\"extdata/purple/purple.somatic.vcf.gz\", package = \"gpgr\") |>   purple_kataegis() kat$data |>   knitr::kable(format = \"html\", caption = \"PURPLE Kataegis Table.\") knitr::kable(kat$description, format = \"html\", caption = \"Kataegis column description.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"qc","dir":"Articles","previous_headings":"Data Munging","what":"QC","title":"PURPLE","text":"PURPLE QC Summary Table.","code":"qc <- system.file(\"extdata/purple/purple.qc\", package = \"gpgr\") |>   gpgr::purple_qc_read()  qc$summary |>   knitr::kable(format = \"html\", caption = \"PURPLE QC Summary Table.\")"},{"path":"https://umccr.github.io/gpgr/articles/purple.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"PURPLE","text":"Main packages used vignette. Platform information.","code":""},{"path":"https://umccr.github.io/gpgr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Peter Diakumis. Author, maintainer.","code":""},{"path":"https://umccr.github.io/gpgr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Diakumis P (2021). gpgr: Genomics Platform Group Reporting. https://umccr.github.io/gpgr/, https://github.com/umccr/gpgr.","code":"@Manual{,   title = {gpgr: Genomics Platform Group Reporting},   author = {Peter Diakumis},   year = {2021},   note = {https://umccr.github.io/gpgr/, https://github.com/umccr/gpgr}, }"},{"path":"https://umccr.github.io/gpgr/index.html","id":"gpgr---genomics-platform-group-reporting","dir":"","previous_headings":"","what":"Genomics Platform Group Reporting","title":"Genomics Platform Group Reporting","text":"Contains reports functions used Genomics Platform Group University Melbourne Centre Cancer Research. PURPLE HRDetect CHORD MutationalPatterns CLI (v0.2.0)  See https://umccr.github.io/gpgr/","code":""},{"path":[]},{"path":"https://umccr.github.io/gpgr/index.html","id":"purple","dir":"","previous_headings":"Main modules","what":"PURPLE","title":"Genomics Platform Group Reporting","text":"Read process output files PURPLE - see vignette https://umccr.github.io/gpgr/articles/purple.html.","code":""},{"path":"https://umccr.github.io/gpgr/index.html","id":"hrdetect","dir":"","previous_headings":"Main modules","what":"HRDetect","title":"Genomics Platform Group Reporting","text":"Wraps functionality HRDetect framework - see vignette https://umccr.github.io/gpgr/articles/hrdetect.html.","code":""},{"path":"https://umccr.github.io/gpgr/index.html","id":"chord","dir":"","previous_headings":"Main modules","what":"CHORD","title":"Genomics Platform Group Reporting","text":"Wraps functionality CHORD - see vignette https://umccr.github.io/gpgr/articles/chord.html.","code":""},{"path":"https://umccr.github.io/gpgr/index.html","id":"mutationalpatterns","dir":"","previous_headings":"Main modules","what":"MutationalPatterns","title":"Genomics Platform Group Reporting","text":"Wraps functionality MutationalPatterns - see vignette https://umccr.github.io/gpgr/articles/mutationalpatterns.html.","code":""},{"path":"https://umccr.github.io/gpgr/index.html","id":"cli-v020","dir":"","previous_headings":"","what":"CLI (v0.2.0)","title":"Genomics Platform Group Reporting","text":"","code":"#------- gpgr -------# $ inst/src/gpgr.R --help usage: gpgr [-h] {hrdetect,chord,mutpat} ...  GPG Reporting  positional arguments:   {hrdetect,chord,mutpat}                         sub-command help     hrdetect            hrdetect help     chord               chord help     mutpat              mutationalpatterns help  #------- hrdetect -------# $ inst/src/gpgr.R hrdetect --help usage: gpgr hrdetect [-h] --sample SAMPLE --snv SNV --sv SV --cnv CNV                      [--out OUT]  optional arguments:   --sample SAMPLE  Sample name.   --snv SNV        Input SNV (VCF format).   --sv SV          Input SV (VCF format).   --cnv CNV        Input CNV (TSV format).   --out OUT        Output file ['hrdetect.json.gz'].  #------- chord -------# $ inst/src/gpgr.R chord --help usage: gpgr chord [-h] --sample SAMPLE --snv SNV --sv SV [--out OUT]  optional arguments:   --sample SAMPLE  Sample name.   --snv SNV        Input SNV (VCF format).   --sv SV          Input SV (VCF format).   --out OUT        Output file ['chord.json.gz']  #------- mutpat -------# $ inst/src/gpgr.R mutpat --help usage: gpgr mutpat [-h] --sample SAMPLE --snv SNV --outdir OUTDIR  optional arguments:   --sample SAMPLE  Sample name.   --snv SNV        Input SNV file (VCF format).   --outdir OUTDIR  Output directory to write results to"},{"path":"https://umccr.github.io/gpgr/reference/EFFECT_ABBREVIATIONS.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviations for SV effects — EFFECT_ABBREVIATIONS","title":"Abbreviations for SV effects — EFFECT_ABBREVIATIONS","text":"Abbreviations SV effects","code":""},{"path":"https://umccr.github.io/gpgr/reference/EFFECT_ABBREVIATIONS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviations for SV effects — EFFECT_ABBREVIATIONS","text":"","code":"data(EFFECT_ABBREVIATIONS)"},{"path":"https://umccr.github.io/gpgr/reference/EFFECT_ABBREVIATIONS.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Abbreviations for SV effects — EFFECT_ABBREVIATIONS","text":"Named character vector names original names, values abbreviated names.","code":""},{"path":"https://umccr.github.io/gpgr/reference/abbreviate_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Abbreviate SV Effects — abbreviate_effect","title":"Abbreviate SV Effects — abbreviate_effect","text":"Abbreviates SV effects column.","code":""},{"path":"https://umccr.github.io/gpgr/reference/abbreviate_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Abbreviate SV Effects — abbreviate_effect","text":"","code":"abbreviate_effect(effects)"},{"path":"https://umccr.github.io/gpgr/reference/abbreviate_effect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Abbreviate SV Effects — abbreviate_effect","text":"effects Input string effects.","code":""},{"path":"https://umccr.github.io/gpgr/reference/abbreviate_effect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Abbreviate SV Effects — abbreviate_effect","text":"abbreviated string.","code":""},{"path":"https://umccr.github.io/gpgr/reference/abbreviate_effect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Abbreviate SV Effects — abbreviate_effect","text":"","code":"(e1 <- gpgr:::abbreviate_effect(\"3_prime_UTR_truncation&start_lost&splice_region_variant\")) #> [1] \"3UTRtrunc, SpliceRegV, StartLoss\" (e2 <- gpgr:::abbreviate_effect(\"duplication&foo&gene_fusion&BOOM&intron_variant\")) #> [1] \"BOOM, Dup, foo, FusG, IntronV\" (e3 <- gpgr:::abbreviate_effect(\"TF_binding_site_variant&TFBS_ablation\")) #> [1] \"TFBSDel, TFBSVar\" (e4 <- gpgr:::abbreviate_effect(\"foo&bar&stop_gained&badaboom\")) #> [1] \"badaboom, bar, foo, StopGain\""},{"path":"https://umccr.github.io/gpgr/reference/af_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"umccrise AF summary — af_summary","title":"umccrise AF summary — af_summary","text":"Get summary table plot SNV allele frequencies output umccrise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/af_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"umccrise AF summary — af_summary","text":"","code":"af_summary(af_global_file, af_keygenes_file)"},{"path":"https://umccr.github.io/gpgr/reference/af_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"umccrise AF summary — af_summary","text":"af_global_file Path 'global' AF file. af_keygenes_file Path 'keygenes' AF file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/af_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"umccrise AF summary — af_summary","text":"list containing gt table plot summarising AFs.","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_mantavcf2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Manta VCF to data.frame — chord_mantavcf2df","title":"Convert Manta VCF to data.frame — chord_mantavcf2df","text":"Converts Manta VCF data.frame processing CHORD.","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_mantavcf2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Manta VCF to data.frame — chord_mantavcf2df","text":"","code":"chord_mantavcf2df(in_vcf)"},{"path":"https://umccr.github.io/gpgr/reference/chord_mantavcf2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Manta VCF to data.frame — chord_mantavcf2df","text":"in_vcf Manta VCF.","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_mantavcf2df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Manta VCF to data.frame — chord_mantavcf2df","text":"Tibble two columns: sv_type sv_len (INFO/SVTYPE INFO/SVLEN VCF).","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_mantavcf2df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert Manta VCF to data.frame — chord_mantavcf2df","text":"","code":"in_vcf <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") d <- chord_mantavcf2df(in_vcf)"},{"path":"https://umccr.github.io/gpgr/reference/chord_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run CHORD — chord_run","title":"Run CHORD — chord_run","text":"Runs CHORD given SNV SV VCF files. NOTE: make sure BSgenome.Hsapiens.UCSC.hgXX installed.","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run CHORD — chord_run","text":"","code":"chord_run(   vcf.snv = NULL,   vcf.sv = NULL,   df.sv = NULL,   sample.name = NULL,   ref.genome = \"hg38\",   sv.caller = \"manta\",   outpath = NULL,   ... )"},{"path":"https://umccr.github.io/gpgr/reference/chord_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run CHORD — chord_run","text":"vcf.snv Path VCF containing SNVs INDELs. vcf.sv Path VCF containing SVs. df.sv data.frame object containing columns 'SVTYPE' 'SVLEN' Manta SV VCF. sample.name Name sample use. ref.genome Human genome assembly. One 'hg38' (default), 'hg19' 'GRCh37'. sv.caller manta (default) gridss. outpath File write CHORD predictions disk (end '.gz'). specified, results written disk. ... arguments passed CHORD::extractSigsChord().","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run CHORD — chord_run","text":"List extracted signatures HRD prediction.","code":""},{"path":"https://umccr.github.io/gpgr/reference/chord_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run CHORD — chord_run","text":"","code":"snv <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") sv <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") chord_res <- chord_run(   vcf.snv = snv, df.sv = chord_mantavcf2df(sv),   sample.name = \"foo\" ) #> Warning:  #>    No reference genome loaded. Please install and load a BSgenome. #>    For example: #>       install.packages('BiocManager') #>       BiocManager::install('BSgenome.Hsapiens.UCSC.hg19') #>       library('BSgenome.Hsapiens.UCSC.hg19') #>  #>    Then specify the BSgenome to the ref.genome arguemnts to the relevant functions. #>    For example: #>       extractSigsSnv(..., ref.genome=BSgenome.Hsapiens.UCSC.hg19) #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #> Loading required package: stats4 #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #>  #>  #>  # chord_res2 <- chord_run(vcf.snv = snv, vcf.sv = sv, sample.name = \"foo\", #                         outpath = \"nogit/chord_results.json.gz\")"},{"path":"https://umccr.github.io/gpgr/reference/cosmic_signatures_2015.html","id":null,"dir":"Reference","previous_headings":"","what":"Get COSMIC 2015 Signatures — cosmic_signatures_2015","title":"Get COSMIC 2015 Signatures — cosmic_signatures_2015","text":"Get COSMIC 2015 Signatures","code":""},{"path":"https://umccr.github.io/gpgr/reference/cosmic_signatures_2015.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get COSMIC 2015 Signatures — cosmic_signatures_2015","text":"","code":"data(cosmic_signatures_2015)"},{"path":"https://umccr.github.io/gpgr/reference/cosmic_signatures_2015.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Get COSMIC 2015 Signatures — cosmic_signatures_2015","text":"matrix 96 rows (one somatic mutation type within specific context) 30 columns (one signature).","code":""},{"path":"https://umccr.github.io/gpgr/reference/count_pieces.html","id":null,"dir":"Reference","previous_headings":"","what":"Count Number of Parts in a String — count_pieces","title":"Count Number of Parts in a String — count_pieces","text":"Counts number pieces string separated pattern. empty string, returns 0. pattern found, returns 1. pattern found , returns 2 (two pieces), etc.","code":""},{"path":"https://umccr.github.io/gpgr/reference/count_pieces.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count Number of Parts in a String — count_pieces","text":"","code":"count_pieces(x, sep)"},{"path":"https://umccr.github.io/gpgr/reference/count_pieces.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count Number of Parts in a String — count_pieces","text":"x Input string. sep Pattern count .","code":""},{"path":"https://umccr.github.io/gpgr/reference/count_pieces.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count Number of Parts in a String — count_pieces","text":"Number parts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/count_pieces.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count Number of Parts in a String — count_pieces","text":"","code":"(a <- gpgr:::count_pieces(\"foo,bar,baz\", sep = \",\")) #> [1] 3 (b <- gpgr:::count_pieces(\"foo\", sep = \",\")) #> [1] 1 (k <- gpgr:::count_pieces(\"\", sep = \",\")) #> [1] 0 (m <- gpgr:::count_pieces(\",\", sep = \",\")) #> [1] 2"},{"path":"https://umccr.github.io/gpgr/reference/get_genome_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get BSgenome Object — get_genome_obj","title":"Get BSgenome Object — get_genome_obj","text":"Gets BSgenome object given human genome assembly string.","code":""},{"path":"https://umccr.github.io/gpgr/reference/get_genome_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get BSgenome Object — get_genome_obj","text":"","code":"get_genome_obj(genome = \"hg38\")"},{"path":"https://umccr.github.io/gpgr/reference/get_genome_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get BSgenome Object — get_genome_obj","text":"genome Human genome assembly string: hg38 (default), hg19 GRCh37.","code":""},{"path":"https://umccr.github.io/gpgr/reference/get_genome_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get BSgenome Object — get_genome_obj","text":"BSgenome object.","code":""},{"path":"https://umccr.github.io/gpgr/reference/get_genome_obj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get BSgenome Object — get_genome_obj","text":"","code":"if (FALSE) { get_genome_obj(\"hg38\") }"},{"path":"https://umccr.github.io/gpgr/reference/hrd_results_tabs.html","id":null,"dir":"Reference","previous_headings":"","what":"HRDetect and CHORD Summary Table — hrd_results_tabs","title":"HRDetect and CHORD Summary Table — hrd_results_tabs","text":"Return summary table HRDetect CHORD results.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrd_results_tabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"HRDetect and CHORD Summary Table — hrd_results_tabs","text":"","code":"hrd_results_tabs(hrdetect_res, chord_res)"},{"path":"https://umccr.github.io/gpgr/reference/hrd_results_tabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"HRDetect and CHORD Summary Table — hrd_results_tabs","text":"hrdetect_res Result running hrdetect_run(). chord_res Result running chord_run().","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrd_results_tabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"HRDetect and CHORD Summary Table — hrd_results_tabs","text":"list tibble gt_tbl object (see gt::gt()).","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrd_results_tabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"HRDetect and CHORD Summary Table — hrd_results_tabs","text":"","code":"if (FALSE) { snv <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") sv <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") cnv <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") nm <- \"SampleA\" genome <- \"hg38\" snvoutdir <- tempdir() hrdetect_res <- hrdetect_run(nm, snv, sv, cnv, genome, snvoutdir) chord_res <- chord_run(vcf.snv = snv, df.sv = gpgr:::chord_mantavcf2df(sv), sample.name = nm) hrd_results_tabs(hrdetect_res = hrdetect_res, chord_res = chord_res) }"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_cnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","title":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","text":"Prepares PURPLE somatic CNVs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_cnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","text":"","code":"hrdetect_prep_cnv(x, nm = NULL)"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_cnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","text":"x Path purple.cnv.somatic.tsv file. nm Sample name.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_cnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","text":"Tibble sample name HRD-LOH index.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_cnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare PURPLE Somatic CNVs for HRDetect — hrdetect_prep_cnv","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") (l <- hrdetect_prep_cnv(x, nm = \"SampleA\")) #> # A tibble: 1 × 2 #>   name    hrdloh_index #>   <chr>          <dbl> #> 1 SampleA            0"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_snvindel.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","title":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","text":"Prepares VCF SNVs/INDELs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_snvindel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","text":"","code":"hrdetect_prep_snvindel(   x,   nm = NULL,   genome = \"hg38\",   outdir = NULL,   sigsToUse = c(1, 2, 3, 5, 6, 8, 13, 17, 18, 20, 26, 30) )"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_snvindel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","text":"x Path VCF SNVs INDELs. nm Sample name. genome Human genome version (default: hg38. hg19 means GRCh37). outdir Directory output analysis results. sigsToUse COSMIC signatures use.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_snvindel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","text":"List two elements: snv_results: tibble exposure score p-value chosen signatures. indel_results: tibble summary count indels proportion.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_snvindel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare VCF with SNVs/INDELs for use with HRDetect — hrdetect_prep_snvindel","text":"","code":"x <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") (l <- hrdetect_prep_snvindel(x, nm = \"sampleA\", outdir = tempdir())) #> $snv_results #> # A tibble: 12 × 3 #>    sig          exposure pvalue #>    <chr>           <dbl>  <dbl> #>  1 Signature.1      736.   0    #>  2 Signature.2        0    0.73 #>  3 Signature.3     1782.   0    #>  4 Signature.5      784.   0    #>  5 Signature.6        0    0.95 #>  6 Signature.8     1626.   0    #>  7 Signature.13     393.   0.02 #>  8 Signature.17       0    1    #>  9 Signature.18       0    1    #> 10 Signature.20       0    1    #> 11 Signature.26       0    1    #> 12 Signature.30       0    0.99 #>  #> $indel_results #> # A tibble: 1 × 12 #>   sample  del.mh del.rep del.none   ins all.indels del.mh.prop del.rep.prop #>   <chr>    <int>   <int>    <int> <int>      <int>       <dbl>        <dbl> #> 1 sampleA    350     156      109   150        615       0.569        0.254 #> # … with 4 more variables: del.none.prop <dbl>, del.mh.count <int>, #> #   del.rep.count <int>, del.none.count <int> #>"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","title":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","text":"Prepares VCF SVs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","text":"","code":"hrdetect_prep_sv(x, nm = NULL, genome = \"hg38\")"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","text":"x Path VCF SVs. nm Sample name. genome Human genome version (default: hg38. hg19 means GRCh37).","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","text":"Single-column data.frame (rownames) counts SV category.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_prep_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepare VCF with SVs for use with HRDetect — hrdetect_prep_sv","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") nm <- \"SampleA\" (d <- hrdetect_prep_sv(x, nm)) #>                             SampleA #> clustered_del_1-10Kb              0 #> clustered_del_10-100Kb            0 #> clustered_del_100Kb-1Mb           0 #> clustered_del_1Mb-10Mb            0 #> clustered_del_>10Mb               0 #> clustered_tds_1-10Kb              0 #> clustered_tds_10-100Kb            0 #> clustered_tds_100Kb-1Mb           0 #> clustered_tds_1Mb-10Mb            0 #> clustered_tds_>10Mb               0 #> clustered_inv_1-10Kb              0 #> clustered_inv_10-100Kb            0 #> clustered_inv_100Kb-1Mb           0 #> clustered_inv_1Mb-10Mb            0 #> clustered_inv_>10Mb               0 #> clustered_trans                   0 #> non-clustered_del_1-10Kb          1 #> non-clustered_del_10-100Kb        0 #> non-clustered_del_100Kb-1Mb       0 #> non-clustered_del_1Mb-10Mb        2 #> non-clustered_del_>10Mb           2 #> non-clustered_tds_1-10Kb          3 #> non-clustered_tds_10-100Kb        1 #> non-clustered_tds_100Kb-1Mb       0 #> non-clustered_tds_1Mb-10Mb        1 #> non-clustered_tds_>10Mb           3 #> non-clustered_inv_1-10Kb         19 #> non-clustered_inv_10-100Kb       19 #> non-clustered_inv_100Kb-1Mb       3 #> non-clustered_inv_1Mb-10Mb        1 #> non-clustered_inv_>10Mb          10 #> non-clustered_trans              18"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_purple_cnv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","title":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","text":"Reads PURPLE somatic CNVs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_purple_cnv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","text":"","code":"hrdetect_read_purple_cnv(x)"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_purple_cnv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","text":"x Path purple.cnv.somatic.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_purple_cnv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","text":"Tibble containing following columns: chromosome, start, end copyNumber (total) minorAllelePloidy","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_purple_cnv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE Somatic CNVs for HRDetect — hrdetect_read_purple_cnv","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") (cnv <- hrdetect_read_purple_cnv(x)) #> # A tibble: 59 × 5 #>    Chromosome chromStart  chromEnd total.copy.number.inTumour minor.copy.number… #>    <chr>           <int>     <int>                      <dbl>              <dbl> #>  1 1                   1 123605522                       1.02             0.0184 #>  2 1           123605523 200044314                       1.99             0.989  #>  3 1           200044315 200044570                       2.83             0.993  #>  4 1           200044571 248956422                       2.01             0.993  #>  5 2                   1  93139350                       2.01             0.994  #>  6 2            93139351 219955359                       2.00             0.996  #>  7 2           219955360 225225069                       1.02             0.0196 #>  8 2           225225070 242193529                       2.03             0.990  #>  9 3                   1  92214015                       1.03             0.0176 #> 10 3            92214016 198295559                       2.00             0.992  #> # … with 49 more rows"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_snvindel_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","title":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","text":"Reads VCF SNVs/INDELs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_snvindel_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","text":"","code":"hrdetect_read_snvindel_vcf(x)"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_snvindel_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","text":"x Path VCF.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_snvindel_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","text":"List containing CHROM, POS, REF ALT columns SNVs INDELs separate tibbles.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_snvindel_vcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read VCF with SNVs/INDELs for use with HRDetect — hrdetect_read_snvindel_vcf","text":"","code":"x <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") (l <- hrdetect_read_snvindel_vcf(x)) #> $snv #> # A tibble: 5,944 × 4 #>    chr   position REF   ALT   #>    <chr>    <int> <chr> <chr> #>  1 chr1   1303273 C     T     #>  2 chr1   4932638 C     G     #>  3 chr1   5545493 T     A     #>  4 chr1   6434166 G     T     #>  5 chr1   6654913 C     G     #>  6 chr1   6961437 C     G     #>  7 chr1   7057562 A     T     #>  8 chr1   7945201 A     T     #>  9 chr1  10020499 A     C     #> 10 chr1  10148616 G     A     #> # … with 5,934 more rows #>  #> $indel #> # A tibble: 765 × 4 #>    chr   position REF           ALT   #>    <chr>    <int> <chr>         <chr> #>  1 chr1   3003408 TGCAGAGA      T     #>  2 chr1   3708171 AG            A     #>  3 chr1   4177626 TC            T     #>  4 chr1   8384452 AG            A     #>  5 chr1  13261670 CT            C     #>  6 chr1  16121339 AT            A     #>  7 chr1  37142428 AG            A     #>  8 chr1  52675033 GC            G     #>  9 chr1  56208467 TC            T     #> 10 chr1  56810765 CTTTAACAGAGAT C     #> # … with 755 more rows #>"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_sv_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","title":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","text":"Reads VCF SVs use HRDetect.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_sv_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","text":"","code":"hrdetect_read_sv_vcf(x, nm = NULL, genome = \"hg38\")"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_sv_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","text":"x Path VCF. nm Sample name. genome Human genome version (default: hg38. hg19 means GRCh37).","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_sv_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","text":"Tibble following BEDPE-like columns: chrom1, start1, end1 chrom2, start2, end2 sample strand1, strand2","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_read_sv_vcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read VCF with SVs for use with HRDetect — hrdetect_read_sv_vcf","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") sv_bedpe <- hrdetect_read_sv_vcf(x, nm = \"SAMPLE\") head(sv_bedpe) #>   chrom1    start1      end1 chrom2    start2      end2 sample strand1 strand2 #> 1   chr1   2067943   2067948   chr1   2068052   2068057 SAMPLE       +       - #> 2   chr1  51143148  51143153   chr1  51143238  51143243 SAMPLE       +       - #> 3   chr1  92930821  92930825   chr1  92930928  92930932 SAMPLE       +       - #> 4   chr1  93828256  93828270   chr1  93828770  93828784 SAMPLE       +       - #> 5   chr1 100376743 100376746   chr1 100376825 100376828 SAMPLE       +       - #> 6   chr1 164031278 164031280   chr1 164031331 164031333 SAMPLE       +       -"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run HRDetect via signature.tools.lib — hrdetect_run","title":"Run HRDetect via signature.tools.lib — hrdetect_run","text":"Runs HRDetect described signature.tools.lib repository.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run HRDetect via signature.tools.lib — hrdetect_run","text":"","code":"hrdetect_run(   nm,   snvindel_vcf,   sv_vcf,   cnv_tsv,   genome = \"hg38\",   snvoutdir = tempdir(),   sigsToUse = c(1, 2, 3, 5, 6, 8, 13, 17, 18, 20, 26, 30),   outpath = NULL )"},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run HRDetect via signature.tools.lib — hrdetect_run","text":"nm Sample name. snvindel_vcf Path VCF SNVs INDELs. sv_vcf Path VCF SVs. cnv_tsv Path purple.cnv.somatic.tsv file. genome Human genome version (default: hg38. hg19 means GRCh37). snvoutdir Directory output SNV signature analysis results. sigsToUse COSMIC SNV signatures use. outpath File write HRDetect predictions disk (end '.gz'). specified, results written disk.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run HRDetect via signature.tools.lib — hrdetect_run","text":"Tibble sample name HRD probability first two columns.","code":""},{"path":"https://umccr.github.io/gpgr/reference/hrdetect_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run HRDetect via signature.tools.lib — hrdetect_run","text":"","code":"snvindel_vcf <- system.file(   \"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\",   package = \"gpgr\" ) sv_vcf <- system.file(\"extdata/umccrise/sv/manta.vcf.gz\", package = \"gpgr\") cnv_tsv <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") nm <- \"SampleA\" genome <- \"hg38\" snvoutdir <- tempdir() (res <- hrdetect_run(nm, snvindel_vcf, sv_vcf, cnv_tsv, genome, snvoutdir)) #> Bootstrap Signature Fits loaded from file #> [info HRDetect_pipeline] Single Nucleotide Variations #> [info HRDetect_pipeline] Structural Variants (Rearrangements) #> [info HRDetect_pipeline] Some samples in the input data_matrix do not have the exposures for SV3 and SV5, checking if the user supplied SV catalogues or BEDPE files for those samples. #> [info HRDetect_pipeline] Rearrangement signatures exposures will be estiamated for the following samples: SampleA #> [info HRDetect_pipeline] Running Signature fit with 100 bootstraps. Increase sparsity by removing exposures with 5% threshold of total mutations and 0.05 threshold of p-value, i.e. exposure of a signature in a sample is set to zero if the probability of having less than 5% of total mutations assigned to that signature is greather than 0.05. #> [info HRDetect_pipeline] Deletions at Micro-homology (Indels) #> [info HRDetect_pipeline] HRD-LOH index (CNV) #> [info HRDetect_pipeline] Computing HRDetect score and feature contributions for the following samples: SampleA #> [info HRDetect_pipeline] HRDetect pipeline completed! #> # A tibble: 1 × 9 #>   sample Probability intercept del.mh.prop  SNV3    SV3   SV5 hrdloh_index  SNV8 #>   <chr>        <dbl>     <dbl>       <dbl> <dbl>  <dbl> <dbl>        <dbl> <dbl> #> 1 Sampl…       0.806     -3.36        6.20  2.44 -0.877 -1.10        -1.95 0.086 # hrdetect_run(nm, snvindel_vcf, sv_vcf, cnv_tsv, genome, snvoutdir, #              outpath = \"nogit/hrdetect_results.json.gz\")"},{"path":"https://umccr.github.io/gpgr/reference/is_vcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the input file look like a VCF? — is_vcf","title":"Does the input file look like a VCF? — is_vcf","text":"Quickly checks input file 'vcf' 'vcf.gz' suffix, column names correspond typical VCF column headers.","code":""},{"path":"https://umccr.github.io/gpgr/reference/is_vcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the input file look like a VCF? — is_vcf","text":"","code":"is_vcf(x)"},{"path":"https://umccr.github.io/gpgr/reference/is_vcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the input file look like a VCF? — is_vcf","text":"x Path file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/is_vcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the input file look like a VCF? — is_vcf","text":"TRUE input file inferred VCF, FALSE otherwise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/is_vcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the input file look like a VCF? — is_vcf","text":"","code":"x <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") (y <- is_vcf(x)) #> [1] TRUE tmp_file <- tempfile(pattern = \"fakeFile\", fileext = \"vcf\") writeLines(c(\"col1\\tcol2\\tcol3\", \"1\\t2\\t3\"), con = tmp_file) (z <- is_vcf(tmp_file)) #> VCF main column names are incorrect. They are: #> col1, col2, col3. #> They should include at the beginning: #> #CHROM, POS, ID, REF, ALT, QUAL, FILTER, INFO, FORMAT. #> [1] FALSE"},{"path":"https://umccr.github.io/gpgr/reference/linx_breakend_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Breakend File — linx_breakend_read","title":"Read LINX Breakend File — linx_breakend_read","text":"Reads linx.breakend.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_breakend_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Breakend File — linx_breakend_read","text":"","code":"linx_breakend_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_breakend_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Breakend File — linx_breakend_read","text":"x Path linx.breakend.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_breakend_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Breakend File — linx_breakend_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_breakend_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Breakend File — linx_breakend_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.breakend.tsv.gz\", package = \"gpgr\") (l <- linx_breakend_read(x)) #> # A tibble: 4,483 × 26 #>    id    svId  isStart gene    transcriptId canonical geneOrientation disruptive #>    <chr> <chr> <chr>   <chr>   <chr>        <chr>     <chr>           <chr>      #>  1 0     0     true    AL5133… ENST0000043… true      Upstream        false      #>  2 1     0     true    WRAP73  ENST0000027… true      Upstream        false      #>  3 2     0     true    TP73    ENST0000037… true      Downstream      true       #>  4 3     0     true    AL1365… ENST0000044… true      Upstream        false      #>  5 4     0     true    AL1365… ENST0000041… true      Upstream        false      #>  6 5     0     true    RF02197 ENST0000061… true      Downstream      false      #>  7 6     0     true    CCDC27  ENST0000029… true      Downstream      false      #>  8 7     0     true    SMIM1   ENST0000044… true      Downstream      false      #>  9 8     0     true    RN7SL5… ENST0000058… true      Downstream      false      #> 10 9     0     true    AL3653… ENST0000060… true      Downstream      false      #> # … with 4,473 more rows, and 18 more variables: reportedDisruption <chr>, #> #   undisruptedCopyNumber <dbl>, regionType <chr>, codingContext <chr>, #> #   biotype <chr>, exonicBasePhase <dbl>, nextSpliceExonRank <dbl>, #> #   nextSpliceExonPhase <dbl>, nextSpliceDistance <dbl>, totalExonCount <dbl>, #> #   type <chr>, chromosome <chr>, orientation <chr>, strand <chr>, #> #   chrBand <chr>, exonUp <dbl>, exonDown <dbl>, junctionCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_clusters_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Clusters File — linx_clusters_read","title":"Read LINX Clusters File — linx_clusters_read","text":"Reads linx.clusters.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_clusters_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Clusters File — linx_clusters_read","text":"","code":"linx_clusters_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_clusters_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Clusters File — linx_clusters_read","text":"x Path linx.clusters.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_clusters_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Clusters File — linx_clusters_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_clusters_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Clusters File — linx_clusters_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.clusters.tsv.gz\", package = \"gpgr\") (l <- linx_clusters_read(x)) #> # A tibble: 603 × 6 #>    clusterId category synthetic resolvedType clusterCount clusterDesc #>    <chr>     <chr>    <chr>     <chr>               <dbl> <chr>       #>  1 0         ARTIFACT false     PAIR_INF                1 INF         #>  2 1         ARTIFACT false     LOW_VAF                 1 BND         #>  3 2         ARTIFACT false     PAIR_INF                1 INF         #>  4 3         ARTIFACT false     LOW_VAF                 1 BND         #>  5 4         ARTIFACT false     LOW_VAF                 1 BND         #>  6 5         ARTIFACT false     LOW_VAF                 1 BND         #>  7 6         ARTIFACT false     PAIR_INF                1 INF         #>  8 7         ARTIFACT false     LOW_VAF                 1 BND         #>  9 8         ARTIFACT false     LOW_VAF                 1 BND         #> 10 9         ARTIFACT false     LOW_VAF                 1 BND         #> # … with 593 more rows"},{"path":"https://umccr.github.io/gpgr/reference/linx_drivercatalog_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Driver Catalog File — linx_drivercatalog_read","title":"Read LINX Driver Catalog File — linx_drivercatalog_read","text":"Reads linx.driver.catalog.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivercatalog_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Driver Catalog File — linx_drivercatalog_read","text":"","code":"linx_drivercatalog_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_drivercatalog_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Driver Catalog File — linx_drivercatalog_read","text":"x Path linx.driver.catalog.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivercatalog_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Driver Catalog File — linx_drivercatalog_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivercatalog_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Driver Catalog File — linx_drivercatalog_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.driver.catalog.tsv.gz\", package = \"gpgr\") (l <- linx_drivercatalog_read(x)) #> # A tibble: 17 × 16 #>    chromosome chromosomeBand gene   driver   category likelihoodMethod #>    <chr>      <chr>          <chr>  <chr>    <chr>    <chr>            #>  1 chr8       q24.22         TG     MUTATION ONCO     DNDS             #>  2 chr20      q12            PLCG1  MUTATION ONCO     DNDS             #>  3 chr8       p11.23         FGFR1  MUTATION ONCO     HOTSPOT          #>  4 chr2       p16.3          MSH6   MUTATION TSG      DNDS             #>  5 chrX       p11.4          DDX3X  MUTATION TSG      DNDS             #>  6 chrX       q21.1          ATRX   MUTATION TSG      DNDS             #>  7 chr6       p21.33         HLA-C  MUTATION TSG      DNDS             #>  8 chr17      q24.3          SOX9   MUTATION TSG      DNDS             #>  9 chr6       p22.1          HLA-A  MUTATION TSG      DNDS             #> 10 chr13      q13.1          BRCA2  MUTATION TSG      DNDS             #> 11 chr17      p13.1          TP53   MUTATION TSG      HOTSPOT          #> 12 chr6       q25.3          ARID1B MUTATION TSG      DNDS             #> 13 chr3       q13.31         ZBTB20 DEL      TSG      DEL              #> 14 chr5       q21.3          FBXL17 DEL      TSG      DEL              #> 15 chr9       p21.3          CDKN2A DEL      TSG      DEL              #> 16 chr10      q23.31         PTEN   DEL      TSG      DEL              #> 17 chrX       p21.1-p21.2    DMD    DEL      TSG      DEL              #> # … with 10 more variables: driverLikelihood <dbl>, NA <chr>, missense <dbl>, #> #   nonsense <dbl>, splice <dbl>, inframe <dbl>, frameshift <dbl>, #> #   biallelic <chr>, minCopyNumber <dbl>, maxCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_drivers_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Drivers File — linx_drivers_read","title":"Read LINX Drivers File — linx_drivers_read","text":"Reads linx.drivers.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivers_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Drivers File — linx_drivers_read","text":"","code":"linx_drivers_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_drivers_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Drivers File — linx_drivers_read","text":"x Path linx.drivers.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivers_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Drivers File — linx_drivers_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_drivers_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Drivers File — linx_drivers_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.drivers.tsv.gz\", package = \"gpgr\") (l <- linx_drivers_read(x)) #> # A tibble: 13 × 3 #>    clusterId gene   eventType     #>    <chr>     <chr>  <chr>         #>  1 -1        DDX3X  LOH_CHR       #>  2 -1        ATRX   LOH_CHR       #>  3 -1        TP53   LOH_CHR       #>  4 306       ZBTB20 LOH_SV_CENTRO #>  5 304       ZBTB20 DEL           #>  6 -1        FBXL17 LOH_ARM       #>  7 192       FBXL17 DEL           #>  8 20        CDKN2A LOH_SV_CENTRO #>  9 22        CDKN2A DEL           #> 10 445       PTEN   LOH_SV_TELO   #> 11 343       PTEN   DEL           #> 12 -1        DMD    LOH_CHR       #> 13 151       DMD    DEL"},{"path":"https://umccr.github.io/gpgr/reference/linx_fusion_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Fusion File — linx_fusion_read","title":"Read LINX Fusion File — linx_fusion_read","text":"Reads linx.fusion.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_fusion_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Fusion File — linx_fusion_read","text":"","code":"linx_fusion_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_fusion_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Fusion File — linx_fusion_read","text":"x Path linx.fusion.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_fusion_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Fusion File — linx_fusion_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_fusion_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Fusion File — linx_fusion_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.fusion.tsv.gz\", package = \"gpgr\") (l <- linx_fusion_read(x)) #> # A tibble: 91 × 23 #>    fivePrimeBreakendId threePrimeBreakendId name    reported reportedType phased #>                  <dbl>                <dbl> <chr>   <chr>    <chr>        <chr>  #>  1                4343                 4341 DMD_DMD false    NONE         OUT_O… #>  2                1634                 1631 ANKIB1… false    NONE         INFRA… #>  3                2046                 2048 TLE1_T… false    NONE         INFRA… #>  4                4460                 4461 FIP1L1… false    NONE         INFRA… #>  5                1025                 1023 E2F3_P… false    NONE         SKIPP… #>  6                 691                  689 NAALAD… false    NONE         INFRA… #>  7                4228                 4226 SGSM1_… false    NONE         INFRA… #>  8                 623                  628 KPNA1_… false    NONE         SKIPP… #>  9                 716                  712 ACAP2_… false    NONE         OUT_O… #> 10                3905                 3913 CADM4_… false    NONE         OUT_O… #> # … with 81 more rows, and 17 more variables: likelihood <chr>, #> #   chainLength <dbl>, chainLinks <dbl>, chainTerminated <chr>, #> #   domainsKept <chr>, domainsLost <chr>, skippedExonsUp <dbl>, #> #   skippedExonsDown <dbl>, fusedExonUp <dbl>, fusedExonDown <dbl>, #> #   geneStart <chr>, geneContextStart <chr>, transcriptStart <chr>, #> #   geneEnd <chr>, geneContextEnd <chr>, transcriptEnd <chr>, #> #   junctionCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_links_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX Links File — linx_links_read","title":"Read LINX Links File — linx_links_read","text":"Reads linx.links.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_links_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX Links File — linx_links_read","text":"","code":"linx_links_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_links_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX Links File — linx_links_read","text":"x Path linx.links.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_links_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX Links File — linx_links_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_links_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX Links File — linx_links_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.links.tsv.gz\", package = \"gpgr\") (l <- linx_links_read(x)) #> # A tibble: 121 × 17 #>    clusterId chainId chainIndex chainCount lowerBreakendId upperBreakendId #>    <chr>     <chr>   <chr>           <dbl>           <dbl>           <dbl> #>  1 43        0       0                   2             440             442 #>  2 47        0       0                   2             467             468 #>  3 58        0       0                   2             314             315 #>  4 61        0       0                   4             319             316 #>  5 61        0       1                   4             316             318 #>  6 61        0       2                   4             317             318 #>  7 62        0       0                   2             453             454 #>  8 66        0       0                   2             324             325 #>  9 68        0       0                   2             327             328 #> 10 68        0       1                   2             327             328 #> # … with 111 more rows, and 11 more variables: lowerBreakendIsStart <chr>, #> #   upperBreakendIsStart <chr>, chromosome <chr>, arm <chr>, assembled <chr>, #> #   traversedSVCount <dbl>, length <dbl>, junctionCopyNumber <dbl>, #> #   junctionCopyNumberUncertainty <dbl>, pseudogeneInfo <chr>, ecDna <chr>"},{"path":"https://umccr.github.io/gpgr/reference/linx_svs_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX SVS File — linx_svs_read","title":"Read LINX SVS File — linx_svs_read","text":"Reads linx.svs.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_svs_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX SVS File — linx_svs_read","text":"","code":"linx_svs_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_svs_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX SVS File — linx_svs_read","text":"x Path linx.svs.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_svs_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX SVS File — linx_svs_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_svs_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX SVS File — linx_svs_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.svs.tsv.gz\", package = \"gpgr\") (l <- linx_svs_read(x)) #> # A tibble: 758 × 21 #>    vcfId           svId  clusterId clusterReason fragileSiteStart fragileSiteEnd #>    <chr>           <chr>     <dbl> <chr>         <chr>            <chr>          #>  1 gridss0bf_561o  0           430 NA            false            false          #>  2 gridss0fb_6591o 1           431 NA            false            false          #>  3 gridss2fb_1822o 2           433 NA            false            false          #>  4 gridss2bf_762o  3           434 NA            false            false          #>  5 unbalanced_0    4           435 PROXIMITY-17  false            false          #>  6 gridss0bf_1340o 5           432 NA            false            false          #>  7 gridss3fb_5048o 6           436 NA            false            false          #>  8 purple_0        7           437 NA            false            false          #>  9 gridss4bf_133o  8           438 NA            false            false          #> 10 gridss4bf_596o  9           440 NA            false            false          #> # … with 748 more rows, and 15 more variables: isFoldback <chr>, #> #   lineTypeStart <chr>, lineTypeEnd <chr>, junctionCopyNumberMin <dbl>, #> #   junctionCopyNumberMax <dbl>, geneStart <chr>, geneEnd <chr>, #> #   replicationTimingStart <dbl>, replicationTimingEnd <dbl>, #> #   localTopologyIdStart <dbl>, localTopologyIdEnd <dbl>, #> #   localTopologyStart <chr>, localTopologyEnd <chr>, localTICountStart <dbl>, #> #   localTICountEnd <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_viscopynumber_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisCopyNumber File — linx_viscopynumber_read","title":"Read LINX VisCopyNumber File — linx_viscopynumber_read","text":"Reads linx.vis_copy_number.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_viscopynumber_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisCopyNumber File — linx_viscopynumber_read","text":"","code":"linx_viscopynumber_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_viscopynumber_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisCopyNumber File — linx_viscopynumber_read","text":"x Path linx.vis_copy_number.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_viscopynumber_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisCopyNumber File — linx_viscopynumber_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_viscopynumber_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisCopyNumber File — linx_viscopynumber_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_copy_number.tsv.gz\", package = \"gpgr\") (l <- linx_viscopynumber_read(x)) #> # A tibble: 1,509 × 6 #>    SampleId           Chromosome    Start      End CopyNumber   BAF #>    <chr>              <chr>         <int>    <int>      <dbl> <dbl> #>  1 SEQC-II_Tumor_50pc chr9              1  1488781       3.90 0.517 #>  2 SEQC-II_Tumor_50pc chr9        1488782  1488978       1.84 1     #>  3 SEQC-II_Tumor_50pc chr9        1488979  9791045       4.00 0.518 #>  4 SEQC-II_Tumor_50pc chr9        9791046  9791110       2.05 0.941 #>  5 SEQC-II_Tumor_50pc chr9        9791111 11319306       3.63 0.551 #>  6 SEQC-II_Tumor_50pc chr9       11319307 11322933       6.23 0.703 #>  7 SEQC-II_Tumor_50pc chr9       11322934 14990057       3.84 0.526 #>  8 SEQC-II_Tumor_50pc chr9       14990058 14990108       2.01 1     #>  9 SEQC-II_Tumor_50pc chr9       14990109 15484000       3.91 0.51  #> 10 SEQC-II_Tumor_50pc chr9       15484001 18303655       2.12 0.975 #> # … with 1,499 more rows"},{"path":"https://umccr.github.io/gpgr/reference/linx_visfusion_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisFusion File — linx_visfusion_read","title":"Read LINX VisFusion File — linx_visfusion_read","text":"Reads linx.vis_fusion.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visfusion_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisFusion File — linx_visfusion_read","text":"","code":"linx_visfusion_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_visfusion_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisFusion File — linx_visfusion_read","text":"x Path linx.vis_fusion.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visfusion_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisFusion File — linx_visfusion_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visfusion_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisFusion File — linx_visfusion_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_fusion.tsv.gz\", package = \"gpgr\") (l <- linx_visfusion_read(x)) #> # A tibble: 1 × 17 #>   SampleId ClusterId Reportable GeneNameUp TranscriptUp    ChrUp  PosUp StrandUp #>   <chr>        <dbl> <chr>      <chr>      <chr>           <chr>  <dbl>    <dbl> #> 1 SampleX        610 true       LHFPL6     ENST00000648377 chr13 3.92e7       -1 #> # … with 9 more variables: RegionTypeUp <chr>, FusedExonUp <dbl>, #> #   GeneNameDown <chr>, TranscriptDown <chr>, ChrDown <chr>, PosDown <dbl>, #> #   StrandDown <dbl>, RegionTypeDown <chr>, FusedExonDown <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_visgeneexon_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisGeneExon File — linx_visgeneexon_read","title":"Read LINX VisGeneExon File — linx_visgeneexon_read","text":"Reads linx.vis_gene_exon.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visgeneexon_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisGeneExon File — linx_visgeneexon_read","text":"","code":"linx_visgeneexon_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_visgeneexon_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisGeneExon File — linx_visgeneexon_read","text":"x Path linx.vis_gene_exon.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visgeneexon_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisGeneExon File — linx_visgeneexon_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visgeneexon_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisGeneExon File — linx_visgeneexon_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_gene_exon.tsv.gz\", package = \"gpgr\") (l <- linx_visgeneexon_read(x)) #> # A tibble: 298 × 9 #>    SampleId      ClusterId Gene  Transcript   Chromosome AnnotationType ExonRank #>    <chr>             <dbl> <chr> <chr>        <chr>      <chr>             <dbl> #>  1 SEQC-II_Tumo…       306 ZBTB… ENST0000047… chr3       DRIVER                5 #>  2 SEQC-II_Tumo…       306 ZBTB… ENST0000047… chr3       DRIVER                4 #>  3 SEQC-II_Tumo…       306 ZBTB… ENST0000047… chr3       DRIVER                3 #>  4 SEQC-II_Tumo…       306 ZBTB… ENST0000047… chr3       DRIVER                2 #>  5 SEQC-II_Tumo…       306 ZBTB… ENST0000047… chr3       DRIVER                1 #>  6 SEQC-II_Tumo…       304 ZBTB… ENST0000047… chr3       DRIVER                5 #>  7 SEQC-II_Tumo…       304 ZBTB… ENST0000047… chr3       DRIVER                4 #>  8 SEQC-II_Tumo…       304 ZBTB… ENST0000047… chr3       DRIVER                3 #>  9 SEQC-II_Tumo…       304 ZBTB… ENST0000047… chr3       DRIVER                2 #> 10 SEQC-II_Tumo…       304 ZBTB… ENST0000047… chr3       DRIVER                1 #> # … with 288 more rows, and 2 more variables: ExonStart <dbl>, ExonEnd <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/linx_visproteindomain_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisProteinDomain File — linx_visproteindomain_read","title":"Read LINX VisProteinDomain File — linx_visproteindomain_read","text":"Reads linx.vis_protein_domain.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visproteindomain_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisProteinDomain File — linx_visproteindomain_read","text":"","code":"linx_visproteindomain_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_visproteindomain_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisProteinDomain File — linx_visproteindomain_read","text":"x Path linx.vis_protein_domain.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visproteindomain_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisProteinDomain File — linx_visproteindomain_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_visproteindomain_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisProteinDomain File — linx_visproteindomain_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_protein_domain.tsv.gz\", package = \"gpgr\") (l <- linx_visproteindomain_read(x)) #> # A tibble: 82 × 7 #>    SampleId           ClusterId Transcript      Chromosome   Start    End Info   #>    <chr>              <chr>     <chr>           <chr>        <int>  <int> <chr>  #>  1 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 BTB    #>  2 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #>  3 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #>  4 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #>  5 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #>  6 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #>  7 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 5-Pri… #>  8 SEQC-II_Tumor_50pc 306       ENST00000474710 chr3        1.14e8 1.14e8 3-Pri… #>  9 SEQC-II_Tumor_50pc 304       ENST00000474710 chr3        1.14e8 1.14e8 BTB    #> 10 SEQC-II_Tumor_50pc 304       ENST00000474710 chr3        1.14e8 1.14e8 ZINC_… #> # … with 72 more rows"},{"path":"https://umccr.github.io/gpgr/reference/linx_vissegments_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisSegments File — linx_vissegments_read","title":"Read LINX VisSegments File — linx_vissegments_read","text":"Reads linx.vis_segments.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissegments_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisSegments File — linx_vissegments_read","text":"","code":"linx_vissegments_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_vissegments_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisSegments File — linx_vissegments_read","text":"x Path linx.vis_segments.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissegments_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisSegments File — linx_vissegments_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissegments_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisSegments File — linx_vissegments_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_segments.tsv.gz\", package = \"gpgr\") (l <- linx_vissegments_read(x)) #> # A tibble: 1,331 × 8 #>    SampleId           ClusterId ChainId Chromosome PosStart PosEnd   LinkPloidy #>    <chr>                  <dbl>   <dbl> <chr>      <chr>    <chr>         <dbl> #>  1 SEQC-II_Tumor_50pc        16       1 chr9       T        1488781        2.13 #>  2 SEQC-II_Tumor_50pc        16       1 chr9       1488979  C              2.13 #>  3 SEQC-II_Tumor_50pc        17       1 chr9       T        9791045        1.77 #>  4 SEQC-II_Tumor_50pc        17       1 chr9       9791111  C              1.77 #>  5 SEQC-II_Tumor_50pc        18       1 chr9       11319307 C              2.36 #>  6 SEQC-II_Tumor_50pc        18       1 chr9       T        11322933       2.36 #>  7 SEQC-II_Tumor_50pc        19       1 chr9       T        14990057       1.88 #>  8 SEQC-II_Tumor_50pc        19       1 chr9       14990109 C              1.88 #>  9 SEQC-II_Tumor_50pc        20       1 chr9       T        15484000       1.79 #> 10 SEQC-II_Tumor_50pc        21       1 chr9       18303656 C              1.96 #> # … with 1,321 more rows, and 1 more variable: InDoubleMinute <chr>"},{"path":"https://umccr.github.io/gpgr/reference/linx_vissvdata_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LINX VisSvData File — linx_vissvdata_read","title":"Read LINX VisSvData File — linx_vissvdata_read","text":"Reads linx.vis_sv_data.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissvdata_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LINX VisSvData File — linx_vissvdata_read","text":"","code":"linx_vissvdata_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/linx_vissvdata_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LINX VisSvData File — linx_vissvdata_read","text":"x Path linx.vis_sv_data.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissvdata_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read LINX VisSvData File — linx_vissvdata_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/linx_vissvdata_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read LINX VisSvData File — linx_vissvdata_read","text":"","code":"x <- system.file(\"extdata/linx/tables/linx.vis_sv_data.tsv.gz\", package = \"gpgr\") (l <- linx_vissvdata_read(x)) #> # A tibble: 760 × 17 #>    SampleId      ClusterId ChainId  SvId Type  ResolvedType IsSynthetic ChrStart #>    <chr>             <dbl>   <dbl> <dbl> <chr> <chr>        <chr>       <chr>    #>  1 SEQC-II_Tumo…       430       1     0 DUP   DUP          false       chr1     #>  2 SEQC-II_Tumo…       431       1     1 DEL   DEL          false       chr1     #>  3 SEQC-II_Tumo…       433       1     2 DEL   DEL          false       chr1     #>  4 SEQC-II_Tumo…       434       1     3 DUP   DUP          false       chr1     #>  5 SEQC-II_Tumo…       435       0     4 INF   PAIR_OTHER   false       chr1     #>  6 SEQC-II_Tumo…       432       1     5 DUP   DUP          false       chr1     #>  7 SEQC-II_Tumo…       436       1     6 DEL   DEL          false       chr1     #>  8 SEQC-II_Tumo…       437       1     7 INF   INF          false       chr1     #>  9 SEQC-II_Tumo…       438       1     8 DUP   DUP          false       chr1     #> 10 SEQC-II_Tumo…       440       1     9 DUP   DUP          false       chr1     #> # … with 750 more rows, and 9 more variables: ChrEnd <chr>, PosStart <dbl>, #> #   PosEnd <dbl>, OrientStart <dbl>, OrientEnd <dbl>, InfoStart <chr>, #> #   InfoEnd <chr>, JunctionCopyNumber <dbl>, InDoubleMinute <chr>"},{"path":"https://umccr.github.io/gpgr/reference/mkdir.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Directory — mkdir","title":"Make Directory — mkdir","text":"Creates directory.","code":""},{"path":"https://umccr.github.io/gpgr/reference/mkdir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Directory — mkdir","text":"","code":"mkdir(d)"},{"path":"https://umccr.github.io/gpgr/reference/mkdir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Directory — mkdir","text":"d Directory create.","code":""},{"path":"https://umccr.github.io/gpgr/reference/mkdir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make Directory — mkdir","text":"directory exists, nothing. , create return invisibly logical indicating operation succeeded.","code":""},{"path":"https://umccr.github.io/gpgr/reference/pkg_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Does R Package Exist — pkg_exists","title":"Does R Package Exist — pkg_exists","text":"Checks specified R package exists local system.","code":""},{"path":"https://umccr.github.io/gpgr/reference/pkg_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does R Package Exist — pkg_exists","text":"","code":"pkg_exists(p)"},{"path":"https://umccr.github.io/gpgr/reference/pkg_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does R Package Exist — pkg_exists","text":"p R package check .","code":""},{"path":"https://umccr.github.io/gpgr/reference/pkg_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does R Package Exist — pkg_exists","text":"TRUE package exists, FALSE otherwise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_hist.html","id":null,"dir":"Reference","previous_headings":"","what":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","title":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","text":"Plots histograms number split reads (SR), paired end reads (PR), sum (tot) across BNDs. Observations SR PR value 0 (NA) shown.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_hist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","text":"","code":"plot_bnd_sr_pr_tot_hist(   d,   title = \"SR, PR and SR + PR histogram for BNDs\",   subtitle = \"Values of 0 (NA) are not shown.\" )"},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_hist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","text":"d data.frame SR_PR_alt column. title Main title plot. subtitle Subtitle plot.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_hist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","text":"ggplot2 plot object.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_hist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Histogram for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_hist","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.tsv\", package = \"gpgr\") d <- process_sv(x)$unmelted plot_bnd_sr_pr_tot_hist(d, \"a title\")"},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","title":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","text":"Plots number split reads (SR), paired end reads (PR), sum (tot) across BNDs, sorted tot.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","text":"","code":"plot_bnd_sr_pr_tot_lines(   d,   title = \"SR, PR and SR + PR line plot for BNDs\",   subtitle = \"Events are sorted by decreasing tot values.\" )"},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","text":"d data.frame SR_PR_alt column. title Main title plot. subtitle Subtitle plot.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","text":"ggplot2 plot object.","code":""},{"path":"https://umccr.github.io/gpgr/reference/plot_bnd_sr_pr_tot_lines.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Line plot for SR, PR and SR + PR for BNDs — plot_bnd_sr_pr_tot_lines","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.tsv\", package = \"gpgr\") d <- process_sv(x)$unmelted plot_bnd_sr_pr_tot_lines(d) #> $p_all  #>  #> $p_tier #> geom_path: Each group consists of only one observation. Do you need to adjust #> the group aesthetic? #> geom_path: Each group consists of only one observation. Do you need to adjust #> the group aesthetic?  #>"},{"path":"https://umccr.github.io/gpgr/reference/process_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Process Structural Variants — process_sv","title":"Process Structural Variants — process_sv","text":"Processes Manta TSV file output umccrise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/process_sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process Structural Variants — process_sv","text":"","code":"process_sv(x)"},{"path":"https://umccr.github.io/gpgr/reference/process_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process Structural Variants — process_sv","text":"x Path manta.tsv output umccrise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/process_sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process Structural Variants — process_sv","text":"list melted/unmelted tibbles (NULL TSV file empty).","code":""},{"path":"https://umccr.github.io/gpgr/reference/process_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process Structural Variants — process_sv","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.tsv\", package = \"gpgr\") (sv <- process_sv(x)) #> $unmelted #> # A tibble: 58 × 19 #>    vcfnum  nann TierTop Start          End   Type  BND_ID BND_mate SR_alt PR_alt #>    <chr>  <dbl> <chr>   <chr>          <chr> <chr> <chr>  <chr>     <int>  <int> #>  1 16         1 4       7:77,167,955   7:10… BND   06     B            NA      9 #>  2 17         1 4       7:102,702,580  7:77… BND   06     A            NA      9 #>  3 20         1 3       8:70,067,891   8:70… BND   01     B            28     43 #>  4 21         2 3       8:70,106,277   8:70… BND   01     A            28     43 #>  5 28         1 4       10:101,127,983 14:2… BND   02     A            22     45 #>  6 29         1 4       10:101,127,987 14:2… BND   03     A            NA     59 #>  7 31         1 4       11:48,321,158  11:5… BND   05     B            NA     11 #>  8 32         1 4       11:50,058,044  11:4… BND   05     A            NA     11 #>  9 37         2 2       14:22,430,592  10:1… BND   03     B            NA     59 #> 10 38         7 4       14:22,430,590  14:2… BND   04     B            40     75 #> # … with 48 more rows, and 9 more variables: SR_PR_sum <int>, SR_PR_ref <chr>, #> #   Ploidy <dbl>, AF_PURPLE <chr>, AF_BPI <chr>, CNC <chr>, CN <chr>, #> #   SScore <int>, annotation <chr> #>  #> $melted #> # A tibble: 1,056 × 28 #>    vcfnum  nann TierTop Start         End    Type  BND_ID BND_mate SR_alt PR_alt #>    <chr>  <dbl> <chr>   <chr>         <chr>  <chr> <chr>  <chr>     <int>  <int> #>  1 02         2 1       1:243,760,053 1:244… DEL   NA     NA           34     66 #>  2 06         2 2       4:108,131,468 4:108… DEL   NA     NA           39     71 #>  3 22         5 2       8:70,106,311  8:70,… DEL   NA     NA           25     47 #>  4 37         2 2       14:22,430,592 10:10… BND   03     B            NA     59 #>  5 02         2 1       1:243,760,053 1:244… DEL   NA     NA           34     66 #>  6 22         5 2       8:70,106,311  8:70,… DEL   NA     NA           25     47 #>  7 22         5 2       8:70,106,311  8:70,… DEL   NA     NA           25     47 #>  8 01        80 3       1:3,660,719   1:6,6… DEL   NA     NA           27     68 #>  9 30        65 3       11:9,681,908  11:12… DEL   NA     NA           29     71 #> 10 33       333 3       12:8,384,896  12:15… DEL   NA     NA           29     69 #> # … with 1,046 more rows, and 18 more variables: SR_PR_sum <int>, #> #   SR_PR_ref <chr>, Ploidy <dbl>, AF_PURPLE <chr>, AF_BPI <chr>, CNC <chr>, #> #   CN <chr>, SScore <int>, Event <chr>, Effect <chr>, Genes <chr>, #> #   Transcript <chr>, Detail <chr>, Tier <chr>, ntrx <dbl>, ngen <dbl>, #> #   neff <dbl>, Tier (Top) <glue> #>  #> $tsv_descr #> # A tibble: 23 × 3 #>    Column             Description                                          Type  #>    <chr>              <chr>                                                <chr> #>  1 caller             Manta SV caller                                      c     #>  2 sample             Tumor sample name                                    c     #>  3 chrom              CHROM column in VCF                                  c     #>  4 start              POS column in VCF                                    i     #>  5 end                INFO/END: End position of the variant described in … i     #>  6 svtype             INFO/SVTYPE: Type of structural variant              c     #>  7 split_read_support FORMAT/SR of tumor sample: Split reads for the ref … c     #>  8 paired_support_PE  FORMAT/PE of tumor sample: ??                        c     #>  9 paired_support_PR  FORMAT/PR of tumor sample: Spanning paired-read sup… c     #> 10 AF_BPI             INFO/BPI_AF: AF at each breakpoint (so AF_BPI1,AF_B… c     #> # … with 13 more rows #>  #> $col_descr #> # A tibble: 30 × 2 #>    Column     Description                                                        #>    <chr>      <chr>                                                              #>  1 nrow       \"Row number that connects variants between tables in same tab set… #>  2 vcfnum     \"Original event row number that connects variants to events.\"      #>  3 TierTop    \"Top priority of the event (from simple_sv_annotation: 1 highest,… #>  4 Tier       \"Priority of the specific event (from simple_sv_annotation: 1 hig… #>  5 Tier (Top) \"Priority of the specific event (Top tier of all event's annotati… #>  6 Chr        \"Chromosome.\"                                                      #>  7 Start      \"Start position as inferred by BPI. For PURPLE-inferred SVs we us… #>  8 End        \"End position. For BNDs = Chr:Start of the mate.Values are inferr… #>  9 ID         \"ID of BND from Manta. For PURPLE-inferred SVs this is PURPLE.\"    #> 10 MATEID     \"ID of BND mate from Manta.\"                                       #> # … with 20 more rows #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","title":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","text":"Processes purple.cnv.germline.tsv file. selects columns interest.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","text":"","code":"purple_cnv_germ_process(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","text":"x Path purple.cnv.germline.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","text":"List two elements: tab: Tibble condensed columns. descr: Description tibble columns.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process PURPLE CNV germline File for UMCCRISE — purple_cnv_germ_process","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.germline.tsv\", package = \"gpgr\") (pp <- purple_cnv_germ_process(x)) #> $tab #> # A tibble: 67 × 9 #>    Chr     Start    End    CN `CN Min+Maj` `Start/End SegS… Method `BAF (count)` #>    <fct>   <int>  <int> <dbl> <chr>        <chr>            <chr>  <chr>         #>  1 chr1   7.51e6 7.51e6   0   0+0          NONE-UNKNOWN     GERML… 0.98 (0)      #>  2 chr1   1.41e7 1.41e7   0.4 0+0.4        NONE-UNKNOWN     GERML… 0.98 (0)      #>  3 chr1   1.58e7 1.58e7   0.4 0+0.3        NONE-UNKNOWN     GERML… 0.98 (0)      #>  4 chr1   5.83e7 5.83e7   0.3 0+0.3        NONE-UNKNOWN     GERML… 0.98 (0)      #>  5 chr1   6.16e7 6.16e7   0.1 0+0.1        NONE-UNKNOWN     GERML… 0.98 (0)      #>  6 chr1   7.98e7 7.98e7   0   0+0          NONE-UNKNOWN     GERML… 0.98 (0)      #>  7 chr1   8.59e7 8.59e7   0.2 0+0.2        NONE-UNKNOWN     GERML… 0.98 (0)      #>  8 chr1   8.90e7 8.90e7   0.1 0+0.1        NONE-UNKNOWN     GERML… 0.98 (0)      #>  9 chr1   1.05e8 1.05e8   0.1 0+0.1        NONE-UNKNOWN     GERML… 0.98 (0)      #> 10 chr1   1.11e8 1.11e8   0   0+0          NONE-UNKNOWN     GERML… 0.98 (0)      #> # … with 57 more rows, and 1 more variable: GC (windowCount) <chr> #>  #> $descr #> # A tibble: 7 × 2 #>   Column               Description                                               #>   <chr>                <chr>                                                     #> 1 Chr/Start/End        Coordinates of copy number segment                        #> 2 CN                   Fitted absolute copy number of segment adjusted for puri… #> 3 CN Min+Maj           CopyNumber of minor + major allele adjusted for purity    #> 4 Start/End SegSupport Type of SV support for the CN breakpoint at start/end of… #> 5 Method               Method used to determine the CN of the region. Allowed v… #> 6 BAF (count)          Tumor BAF after adjusted for purity and ploidy (Count of… #> 7 GC (windowCount)     Proportion of segment that is G or C (Count of COBALT wi… #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE CNV Germline File — purple_cnv_germ_read","title":"Read PURPLE CNV Germline File — purple_cnv_germ_read","text":"Reads purple.cnv.germline.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE CNV Germline File — purple_cnv_germ_read","text":"","code":"purple_cnv_germ_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE CNV Germline File — purple_cnv_germ_read","text":"x Path purple.cnv.germline.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE CNV Germline File — purple_cnv_germ_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_germ_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE CNV Germline File — purple_cnv_germ_read","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.germline.tsv\", package = \"gpgr\") (p <- purple_cnv_germ_read(x)) #> # A tibble: 67 × 16 #>    chromosome     start       end copyNumber bafCount observedBAF   baf #>    <chr>          <int>     <int>      <dbl>    <dbl>       <dbl> <dbl> #>  1 chr1         7510001   7511000    -0.0049        0           0 0.982 #>  2 chr1        14110001  14113000     0.416         0           0 0.982 #>  3 chr1        15825001  15829000     0.350         0           0 0.982 #>  4 chr1        58278001  58279000     0.338         0           0 0.982 #>  5 chr1        61617001  61618000     0.146         0           0 0.982 #>  6 chr1        79756001  79757000     0.0277        0           0 0.982 #>  7 chr1        85935001  85939000     0.173         0           0 0.982 #>  8 chr1        89010001  89013000     0.0799        0           0 0.982 #>  9 chr1       105473001 105481000     0.120         0           0 0.982 #> 10 chr1       110834001 110845000     0.0083        0           0 0.982 #> # … with 57 more rows, and 9 more variables: segmentStartSupport <chr>, #> #   segmentEndSupport <chr>, method <chr>, depthWindowCount <int>, #> #   gcContent <dbl>, minStart <int>, maxStart <int>, #> #   minorAlleleCopyNumber <dbl>, majorAlleleCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","title":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","text":"Processes purple.cnv.gene.tsv file. Keeps genes UMCCR cancer gene list selects columns interest.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","text":"","code":"purple_cnv_som_gene_process(x, g = NULL)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","text":"x Path purple.cnv.gene.tsv file. g Path gene file containing least three columns: symbol: gene name (character). tumorsuppressor: gene tumor suppressor (TRUE/FALSE). oncogene: gene oncogene (TRUE/FALSE).","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","text":"List two elements: tab: Tibble filtered genes found  g. descr: Description tibble columns.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process PURPLE CNV Gene File for UMCCRISE — purple_cnv_som_gene_process","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.gene.tsv\", package = \"gpgr\") g <- system.file(\"extdata/ref/umccr_cancer_genes_2019-03-20.tsv\", package = \"gpgr\") (pp <- purple_cnv_som_gene_process(x, g)) #> $tab #> # A tibble: 13 × 15 #>    gene   minCN maxCN chrom    start      end chrBand onco_or_ts transcriptID    #>    <chr>  <dbl> <dbl> <fct>    <int>    <int> <chr>   <chr>      <chr>           #>  1 CRBN   1.03  1.03  chr3   3150011  3179710 p26.2   \"\"         ENST0000023194… #>  2 SDHA   2.01  2.01  chr5    218241   256700 p15.33  \"tsgene\"   ENST0000026493… #>  3 DUSP22 2.00  2.00  chr6    292462   351353 p25.3   \"\"         ENST0000041923… #>  4 IRF4   2.00  2.00  chr6    391739   411447 p25.3   \"oncogene\" ENST0000038095… #>  5 FOXQ1  2.00  2.00  chr6   1312440  1314748 p25.3   \"\"         ENST0000029683… #>  6 DOCK8  1.99  1.99  chr9    214865   465259 p24.3   \"\"         ENST0000043282… #>  7 LARP4B 1.99  1.99  chr10   806914   931705 p15.3   \"tsgene\"   ENST0000061239… #>  8 SIRT3  2.00  2.00  chr11   215458   236431 p15.5   \"tsgene\"   ENST0000038274… #>  9 KDM5A  2.00  2.00  chr12   280129   389454 p13.33  \"oncogene\" ENST0000039978… #> 10 ZMYM2  2.00  2.00  chr13 19958670 20091829 q12.11  \"\"         ENST0000061034… #> 11 TYMS   2.01  2.01  chr18   657604   673578 p11.32  \"\"         ENST0000032327… #> 12 CRLF2  0.997 0.997 chrX   1190490  1212750 p22.33  \"oncogene\" ENST0000040084… #> 13 SRY    1.01  1.01  chrY   2786855  2787699 p11.2   \"\"         ENST0000038307… #> # … with 6 more variables: minMinorAlleleCN <dbl>, somReg <dbl>, #> #   germDelReg <chr>, minReg <dbl>, minRegStartEnd <chr>, #> #   minRegSupportStartEndMethod <chr> #>  #> $descr #> # A tibble: 12 × 2 #>    Column                               Description                              #>    <chr>                                <chr>                                    #>  1 gene                                 Name of gene                             #>  2 minCN/maxCN                          Min/Max copy number found in gene exons  #>  3 chrom/start/end                      Chromosome/start/end location of gene t… #>  4 chrBand                              Chromosome band of the gene              #>  5 onco_or_ts                           oncogene ('oncogene'), tumor suppressor… #>  6 transcriptID                         Ensembl transcript ID (dot version)      #>  7 minMinorAlleleCN                     Minimum allele ploidy found over the ge… #>  8 somReg (somaticRegions)              Count of somatic copy number regions th… #>  9 germDelReg (germlineHomDeletionRegi… Number of regions spanned by this gene … #> 10 minReg (minRegions)                  Number of somatic regions inside the ge… #> 11 minRegStartEnd                       Start/End base of the copy number regio… #> 12 minRegSupportStartEndMethod          Start/end support of the CN region over… #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","title":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","text":"Reads purple.cnv.gene.tsv file, summarises copy number alterations gene HMF panel (see table).","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","text":"","code":"purple_cnv_som_gene_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","text":"x Path purple.cnv.gene.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_gene_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE CNV Gene File — purple_cnv_som_gene_read","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.gene.tsv\", package = \"gpgr\") (p <- purple_cnv_som_gene_read(x)) #> # A tibble: 240 × 20 #>    chromosome  start    end gene        minCopyNumber maxCopyNumber unused #>    <chr>       <int>  <int> <chr>               <dbl>         <dbl> <chr>  #>  1 chr1        11869  14409 DDX11L1              1.02          1.02 0      #>  2 chr1        14404  29570 WASH7P               1.02          1.02 0      #>  3 chr1        17369  17436 MIR6859-1            1.02          1.02 0      #>  4 chr1        29554  31097 MIR1302-2HG          1.02          1.02 0      #>  5 chr1        30366  30503 MIR1302-2            1.02          1.02 0      #>  6 chr1        34554  36081 FAM138A              1.02          1.02 0      #>  7 chr1        69091  70008 OR4F5                1.02          1.02 0      #>  8 chr1       185217 195411 FO538757.1           1.02          1.02 0      #>  9 chr1       187891 187958 MIR6859-2            1.02          1.02 0      #> 10 chr1       450740 451678 OR4F29               1.02          1.02 0      #> # … with 230 more rows, and 13 more variables: somaticRegions <dbl>, #> #   germlineHomDeletionRegions <dbl>, germlineHetToHomDeletionRegions <dbl>, #> #   transcriptId <chr>, transcriptVersion <chr>, chromosomeBand <chr>, #> #   minRegions <dbl>, minRegionStart <int>, minRegionEnd <int>, #> #   minRegionStartSupport <chr>, minRegionEndSupport <chr>, #> #   minRegionMethod <chr>, minMinorAlleleCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_process.html","id":null,"dir":"Reference","previous_headings":"","what":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","title":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","text":"Processes purple.cnv.somatic.tsv file. selects columns interest.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_process.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","text":"","code":"purple_cnv_som_process(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_process.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","text":"x Path purple.cnv.somatic.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_process.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","text":"List two elements: tab: Tibble condensed columns. descr: Description tibble columns.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_process.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Process PURPLE CNV Somatic File for UMCCRISE — purple_cnv_som_process","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") (pp <- purple_cnv_som_process(x)) #> $tab #> # A tibble: 59 × 9 #>    Chr     Start    End    CN `CN Min+Maj` `Start/End SegS… Method `BAF (count)` #>    <fct>   <int>  <int> <dbl> <chr>        <chr>            <chr>  <chr>         #>  1 chr1   1   e0 1.24e8   1   0+1          TELOMERE-CENTRO… BAF_W… 0.98 (20830)  #>  2 chr1   1.24e8 2.00e8   2   1+1          CENTROMERE-DUP   BAF_W… 0.5 (10239)   #>  3 chr1   2.00e8 2.00e8   2.8 1+1.8        DUP-DUP          STRUC… 0.65 (0)      #>  4 chr1   2.00e8 2.49e8   2   1+1          DUP-TELOMERE     BAF_W… 0.5 (10341)   #>  5 chr2   1   e0 9.31e7   2   1+1          TELOMERE-CENTRO… BAF_W… 0.51 (19339)  #>  6 chr2   9.31e7 2.20e8   2   1+1          CENTROMERE-BND   BAF_W… 0.5 (19047)   #>  7 chr2   2.20e8 2.25e8   1   0+1          BND-BND          BAF_W… 0.98 (1284)   #>  8 chr2   2.25e8 2.42e8   2   1+1          BND-TELOMERE     BAF_W… 0.51 (4236)   #>  9 chr3   1   e0 9.22e7   1   0+1          TELOMERE-CENTRO… BAF_W… 0.98 (18629)  #> 10 chr3   9.22e7 1.98e8   2   1+1          CENTROMERE-TELO… BAF_W… 0.5 (21114)   #> # … with 49 more rows, and 1 more variable: GC (windowCount) <chr> #>  #> $descr #> # A tibble: 7 × 2 #>   Column               Description                                               #>   <chr>                <chr>                                                     #> 1 Chr/Start/End        Coordinates of copy number segment                        #> 2 CN                   Fitted absolute copy number of segment adjusted for puri… #> 3 CN Min+Maj           CopyNumber of minor + major allele adjusted for purity    #> 4 Start/End SegSupport Type of SV support for the CN breakpoint at start/end of… #> 5 Method               Method used to determine the CN of the region. Allowed v… #> 6 BAF (count)          Tumor BAF after adjusted for purity and ploidy (Count of… #> 7 GC (windowCount)     Proportion of segment that is G or C (Count of COBALT wi… #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE CNV Somatic File — purple_cnv_som_read","title":"Read PURPLE CNV Somatic File — purple_cnv_som_read","text":"Reads purple.cnv.somatic.tsv file, contains copy number profile (contiguous) segments tumor sample (see table).","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE CNV Somatic File — purple_cnv_som_read","text":"","code":"purple_cnv_som_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE CNV Somatic File — purple_cnv_som_read","text":"x Path purple.cnv.somatic.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE CNV Somatic File — purple_cnv_som_read","text":"input file tibble.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_cnv_som_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE CNV Somatic File — purple_cnv_som_read","text":"","code":"x <- system.file(\"extdata/purple/purple.cnv.somatic.tsv\", package = \"gpgr\") (p <- purple_cnv_som_read(x)) #> # A tibble: 59 × 16 #>    chromosome     start       end copyNumber bafCount observedBAF   baf #>    <chr>          <int>     <int>      <dbl>    <dbl>       <dbl> <dbl> #>  1 chr1               1 123605522       1.02    20830       0.792 0.982 #>  2 chr1       123605523 200044314       1.99    10239       0.540 0.503 #>  3 chr1       200044315 200044570       2.83        0       0     0.649 #>  4 chr1       200044571 248956422       2.01    10341       0.540 0.505 #>  5 chr2               1  93139350       2.01    19339       0.54  0.505 #>  6 chr2        93139351 219955359       2.00    19047       0.540 0.503 #>  7 chr2       219955360 225225069       1.02     1284       0.791 0.981 #>  8 chr2       225225070 242193529       2.03     4236       0.539 0.511 #>  9 chr3               1  92214015       1.03    18629       0.792 0.983 #> 10 chr3        92214016 198295559       2.00    21114       0.539 0.504 #> # … with 49 more rows, and 9 more variables: segmentStartSupport <chr>, #> #   segmentEndSupport <chr>, method <chr>, depthWindowCount <int>, #> #   gcContent <dbl>, minStart <int>, maxStart <int>, #> #   minorAlleleCopyNumber <dbl>, majorAlleleCopyNumber <dbl>"},{"path":"https://umccr.github.io/gpgr/reference/purple_kataegis.html","id":null,"dir":"Reference","previous_headings":"","what":"Get PURPLE Kataegis Regions — purple_kataegis","title":"Get PURPLE Kataegis Regions — purple_kataegis","text":"Reads purple.somatic.vcf.gz file extracts variants within kataegis regions.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_kataegis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get PURPLE Kataegis Regions — purple_kataegis","text":"","code":"purple_kataegis(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_kataegis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get PURPLE Kataegis Regions — purple_kataegis","text":"x Path purple.somatic.vcf.gz file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_kataegis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get PURPLE Kataegis Regions — purple_kataegis","text":"list tibble containing variants kataegis clusters various metrics variant, tibble description metric.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_kataegis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get PURPLE Kataegis Regions — purple_kataegis","text":"","code":"x <- system.file(\"extdata/purple/purple.somatic.vcf.gz\", package = \"gpgr\") (k <- purple_kataegis(x)) #> $data #> # A tibble: 26 × 11 #>    CHROM      POS KT    AF     PURPLE_AF PURPLE_CN PURPLE_MACN PURPLE_VCN SUBCL #>    <chr>    <int> <chr> <chr>      <dbl>     <dbl>       <dbl>      <dbl> <dbl> #>  1 chr2  45006212 REV_1 0.2143     0.260      1.52       0          0.396     1 #>  2 chr2  45007103 REV_1 0.1977     0.240      1.52       0          0.365     1 #>  3 chr2  45007598 REV_1 0.24       0.291      1.52       0          0.444     1 #>  4 chr2  45007709 REV_1 0.2273     0.276      1.52       0          0.42      1 #>  5 chr3  71010245 REV_2 0.3165     0.405      1.16       0.461      0.469     1 #>  6 chr3  71010553 REV_2 0.1863     0.239      1.16       0.461      0.276     1 #>  7 chr3  71011404 REV_2 0.2841     0.364      1.16       0.461      0.421     1 #>  8 chr3  71011410 REV_2 0.2727     0.349      1.16       0.461      0.405     1 #>  9 chr3  71011474 REV_2 0.2577     0.330      1.16       0.461      0.382     1 #> 10 chr3  71327944 FWD_1 0.1982     0.249      1.26       0.438      0.314     1 #> # … with 16 more rows, and 2 more variables: MH <chr>, TNC <chr> #>  #> $description #> # A tibble: 9 × 2 #>   ID          Description                                                        #>   <chr>       <chr>                                                              #> 1 AF          Allele Frequency, for each ALT allele, in the same order as listed #> 2 KT          Forward/reverse kataegis id                                        #> 3 MH          Microhomology                                                      #> 4 PURPLE_AF   Purity adjusted allelic frequency of variant                       #> 5 PURPLE_CN   Purity adjusted copy number surrounding variant location           #> 6 PURPLE_MACN Purity adjusted minor allele ploidy surrounding variant location   #> 7 PURPLE_VCN  Purity adjusted ploidy of variant                                  #> 8 SUBCL       Non-zero subclonal likelihood                                      #> 9 TNC         Tri-nucleotide context                                             #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_purity_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE Purity file — purple_purity_read","title":"Read PURPLE Purity file — purple_purity_read","text":"Reads purple.purity.tsv file containing summary purity fit.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_purity_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE Purity file — purple_purity_read","text":"","code":"purple_purity_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_purity_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE Purity file — purple_purity_read","text":"x Path purple.purity.tsv file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_purity_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE Purity file — purple_purity_read","text":"input file tibble summarised tibble description metric.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_purity_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE Purity file — purple_purity_read","text":"","code":"x <- system.file(\"extdata/purple/purple.purity.tsv\", package = \"gpgr\") (p <- purple_purity_read(x)) #> $raw #> # A tibble: 24 × 2 #>    column               value  #>    <chr>                <chr>  #>  1 purity               0.75   #>  2 normFactor           1.05   #>  3 score                0.26   #>  4 diploidProportion    0.86   #>  5 ploidy               1.87   #>  6 gender               MALE   #>  7 status               NORMAL #>  8 polyclonalProportion 0      #>  9 minPurity            0.71   #> 10 maxPurity            0.78   #> # … with 14 more rows #>  #> $summary #> # A tibble: 10 × 4 #>        n variable        value            details                                #>    <dbl> <chr>           <glue>           <chr>                                  #>  1     2 Purity          0.75 (0.71-0.78) Purity of tumor in the sample (and mi… #>  2     3 Ploidy          1.87 (1.86-1.88) Average ploidy of tumor sample after … #>  3     4 Gender          MALE             Gender as inferred by AMBER/COBALT.    #>  4     7 WGD             FALSE            Whole genome duplication (more than 1… #>  5     8 MSI (indels/Mb) MSS (0)          MSI status (MSI, MSS or UNKNOWN if so… #>  6     9 PolyclonalProp  0                Proportion of CN regions that are mor… #>  7    10 DiploidyProp    0.86 (0.86-0.86) Proportion of CN regions that have 1 … #>  8    11 TMB             0 (LOW)          Tumor mutational burden (# PASS varia… #>  9    12 TML             0 (LOW)          Tumor mutational load (# of missense … #> 10    13 TMB-SV          713              # of non inferred, non single passing… #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_qc_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE QC file — purple_qc_read","title":"Read PURPLE QC file — purple_qc_read","text":"Reads purple.qc file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_qc_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE QC file — purple_qc_read","text":"","code":"purple_qc_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_qc_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE QC file — purple_qc_read","text":"x Path purple.qc file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_qc_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE QC file — purple_qc_read","text":"input file tibble summarised tibble description metric.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_qc_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE QC file — purple_qc_read","text":"","code":"x <- system.file(\"extdata/purple/purple.qc\", package = \"gpgr\") (q <- purple_qc_read(x)) #> $raw #> # A tibble: 10 × 2 #>    key                           value              #>    <chr>                         <chr>              #>  1 QCStatus                      WARN_DELETED_GENES #>  2 Method                        NORMAL             #>  3 CopyNumberSegments            1428               #>  4 UnsupportedCopyNumberSegments 0                  #>  5 Purity                        0.8600             #>  6 AmberGender                   MALE               #>  7 CobaltGender                  MALE               #>  8 DeletedGenes                  7782               #>  9 Contamination                 0.0                #> 10 GermlineAberrations           NONE               #>  #> $summary #> # A tibble: 8 × 4 #>       n variable            value                     details                    #>   <dbl> <chr>               <glue>                    <glue>                     #> 1     1 QC_Status           WARN_DELETED_GENES        \"See 'Description'.\"       #> 2    13 Method              NORMAL                    \"Fit method (NORMAL, HIGH… #> 3    14 CopyNumberSegments  1428 (Unsupported: 0)     \"# of CN segments.\"        #> 4     2 Purity              0.8600                    \"\"                         #> 5    17 Gender              Amber: MALE; Cobalt: MALE \"\"                         #> 6    14 DeletedGenes        7782                      \"# of homozygously delete… #> 7    15 Contamination       0.0                       \"Rate of contamination in… #> 8    16 GermlineAberrations NONE                      \"Can be one or more of: K… #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_snv_vcf_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","title":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","text":"Reads purple.somatic.vcf.gz file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_snv_vcf_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","text":"","code":"purple_snv_vcf_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_snv_vcf_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","text":"x Path purple.somatic.vcf.gz file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_snv_vcf_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","text":"list input file tibble (specific INFO fields) tibble description INFO field.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_snv_vcf_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE Somatic SNV VCF — purple_snv_vcf_read","text":"","code":"x <- system.file(\"extdata/purple/purple.somatic.vcf.gz\", package = \"gpgr\") (snv <- purple_snv_vcf_read(x)) #> $data #> # A tibble: 423 × 13 #>    CHROM    POS AF    PURPLE_AF PURPLE_CN PURPLE_GERMLINE PURPLE_MACN PURPLE_VCN #>    <chr>  <int> <chr>     <dbl>     <dbl> <chr>                 <dbl>      <dbl> #>  1 chr1  3.09e6 0.14…     0.173         2 NOISE                 0.959      0.346 #>  2 chr1  3.29e6 0.24…     0.286         2 NOISE                 0.959      0.572 #>  3 chr1  3.40e6 0.11…     0.136         2 NOISE                 0.959      0.272 #>  4 chr1  6.96e6 0.5       0.581         2 NOISE                 0.959      1.16  #>  5 chr1  6.98e6 0.5       0.581         2 NOISE                 0.959      1.16  #>  6 chr1  7.10e6 0.51…     0.596         2 NOISE                 0.959      1.19  #>  7 chr1  7.19e6 0.40…     0.476         2 NOISE                 0.959      0.951 #>  8 chr1  7.19e6 0.48…     0.568         2 NOISE                 0.959      1.14  #>  9 chr1  7.19e6 0.63…     0.741         2 NOISE                 0.959      1.48  #> 10 chr1  7.29e6 0.54…     0.630         2 NOISE                 0.959      1.26  #> # … with 413 more rows, and 5 more variables: HMF_HOTSPOT <lgl>, KT <chr>, #> #   MH <chr>, SUBCL <dbl>, TNC <chr> #>  #> $description #> # A tibble: 11 × 2 #>    ID              Description                                                   #>    <chr>           <chr>                                                         #>  1 AF              Allele Frequency, for each ALT allele, in the same order as … #>  2 HMF_HOTSPOT     calculated by flag of overlapping values in field HMF from s… #>  3 KT              Forward/reverse kataegis id                                   #>  4 MH              Microhomology                                                 #>  5 PURPLE_AF       Purity adjusted allelic frequency of variant                  #>  6 PURPLE_CN       Purity adjusted copy number surrounding variant location      #>  7 PURPLE_GERMLINE Germline classification surrounding variant location          #>  8 PURPLE_MACN     Purity adjusted minor allele ploidy surrounding variant loca… #>  9 PURPLE_VCN      Purity adjusted ploidy of variant                             #> 10 SUBCL           Non-zero subclonal likelihood                                 #> 11 TNC             Tri-nucleotide context                                        #>"},{"path":"https://umccr.github.io/gpgr/reference/purple_version_read.html","id":null,"dir":"Reference","previous_headings":"","what":"Read PURPLE version file — purple_version_read","title":"Read PURPLE version file — purple_version_read","text":"Reads purple.version file containing PURPLE version build date.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_version_read.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read PURPLE version file — purple_version_read","text":"","code":"purple_version_read(x)"},{"path":"https://umccr.github.io/gpgr/reference/purple_version_read.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read PURPLE version file — purple_version_read","text":"x Path purple.version file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_version_read.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read PURPLE version file — purple_version_read","text":"list elements: version: version PURPLE used. build_date: build date PURPLE version.","code":""},{"path":"https://umccr.github.io/gpgr/reference/purple_version_read.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read PURPLE version file — purple_version_read","text":"","code":"x <- system.file(\"extdata/purple/purple.version\", package = \"gpgr\") (v <- purple_version_read(x)) #> $version #> [1] \"2.51\" #>  #> $build_date #> [1] \"2020-10-26 03:37\" #>"},{"path":"https://umccr.github.io/gpgr/reference/session_info_kable.html","id":null,"dir":"Reference","previous_headings":"","what":"Session Information Kable — session_info_kable","title":"Session Information Kable — session_info_kable","text":"Session information kables vignettes.","code":""},{"path":"https://umccr.github.io/gpgr/reference/session_info_kable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Session Information Kable — session_info_kable","text":"","code":"session_info_kable(pkgs)"},{"path":"https://umccr.github.io/gpgr/reference/session_info_kable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Session Information Kable — session_info_kable","text":"pkgs Vector R packages display vignette.","code":""},{"path":"https://umccr.github.io/gpgr/reference/session_info_kable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Session Information Kable — session_info_kable","text":"list two kables containing information platform specified packages (pkgs).","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate COSMIC Signature Contribution — sig_contribution","title":"Calculate COSMIC Signature Contribution — sig_contribution","text":"Finds linear combination COSMIC (2015 2020) mutation signatures closely reconstructs SNV mutation matrix solving nonnegative least-squares constraints problem.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate COSMIC Signature Contribution — sig_contribution","text":"","code":"sig_contribution(mut_mat, signatures)"},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate COSMIC Signature Contribution — sig_contribution","text":"mut_mat Mutation count matrix (dimensions: m rows (mutation types) X 1 column (sample)). signatures Signature matrix (dimensions: m rows (mutation types) X n columns (signatures))","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate COSMIC Signature Contribution — sig_contribution","text":"list COSMIC 2015 2020 signature contributions sample's signature.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Create COSMIC Signature Table — sig_contribution_table","title":"Create COSMIC Signature Table — sig_contribution_table","text":"Creates COSMIC signature table display RMarkdown report.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create COSMIC Signature Table — sig_contribution_table","text":"","code":"sig_contribution_table(contr, type, outdir = NULL)"},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create COSMIC Signature Table — sig_contribution_table","text":"contr tibble Rank, Signature, Contribution RelFreq columns. type One Sig (old COSMIC), SBS, DBS ID. outdir Relative directory write signature plots incorporating RMarkdown report.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_contribution_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create COSMIC Signature Table — sig_contribution_table","text":"contr tibble additional Plot column pointing local path corresponding signature plot (markdown syntax). outdir = NULL (default), simply return contr tibble description signature.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_dbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Count DBS Contexts — sig_count_dbs","title":"Count DBS Contexts — sig_count_dbs","text":"Counts DBS Contexts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_dbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count DBS Contexts — sig_count_dbs","text":"","code":"sig_count_dbs(vcf_gr)"},{"path":"https://umccr.github.io/gpgr/reference/sig_count_dbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count DBS Contexts — sig_count_dbs","text":"vcf_gr GRanges containing mutation types single sample.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_dbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count DBS Contexts — sig_count_dbs","text":"tibble containing number DBS per COSMIC context per gr.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Count INDEL Contexts — sig_count_indel","title":"Count INDEL Contexts — sig_count_indel","text":"Counts INDEL Contexts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count INDEL Contexts — sig_count_indel","text":"","code":"sig_count_indel(vcf_gr, ref_genome)"},{"path":"https://umccr.github.io/gpgr/reference/sig_count_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count INDEL Contexts — sig_count_indel","text":"vcf_gr GRanges containing mutation types single sample. ref_genome BSGenome reference genome use.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count INDEL Contexts — sig_count_indel","text":"tibble containing number INDELs per COSMIC context per gr.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_snv.html","id":null,"dir":"Reference","previous_headings":"","what":"Count SNV Contexts — sig_count_snv","title":"Count SNV Contexts — sig_count_snv","text":"Counts SNV Contexts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_snv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count SNV Contexts — sig_count_snv","text":"","code":"sig_count_snv(vcf_gr, ref_genome)"},{"path":"https://umccr.github.io/gpgr/reference/sig_count_snv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count SNV Contexts — sig_count_snv","text":"vcf_gr GRanges containing mutation types single sample. ref_genome BSGenome reference genome use.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_count_snv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count SNV Contexts — sig_count_snv","text":"list two elements: snv_counts: matrix containing number SNVs per COSMIC context per gr. gr_snv: GRanges object containing SNVs.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_dbs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot DBS Mutation Characteristics — sig_plot_dbs","title":"Plot DBS Mutation Characteristics — sig_plot_dbs","text":"Plots DBS mutation characteristics.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_dbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot DBS Mutation Characteristics — sig_plot_dbs","text":"","code":"sig_plot_dbs(dbs_counts)"},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_dbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot DBS Mutation Characteristics — sig_plot_dbs","text":"dbs_counts DBS context counts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_dbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot DBS Mutation Characteristics — sig_plot_dbs","text":"list two ggplot2 objects: p_dbs_main: main DBS contexts. p_dbs_cont: DBS contexts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_indel.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot INDEL Mutation Characteristics — sig_plot_indel","title":"Plot INDEL Mutation Characteristics — sig_plot_indel","text":"Plots INDEL mutation characteristics.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_indel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot INDEL Mutation Characteristics — sig_plot_indel","text":"","code":"sig_plot_indel(indel_counts)"},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_indel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot INDEL Mutation Characteristics — sig_plot_indel","text":"indel_counts INDEL context counts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_indel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot INDEL Mutation Characteristics — sig_plot_indel","text":"list two ggplot2 objects: p_indel_main: main INDEL contexts. p_indel_cont: INDEL contexts.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_snv.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot SNV Mutation Characteristics — sig_plot_snv","title":"Plot SNV Mutation Characteristics — sig_plot_snv","text":"Plots SNV mutation characteristics.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_snv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot SNV Mutation Characteristics — sig_plot_snv","text":"","code":"sig_plot_snv(gr_snv, snv_counts, ref_genome)"},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_snv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot SNV Mutation Characteristics — sig_plot_snv","text":"gr_snv GRanges containing SNVs single sample. snv_counts matrix counts SNV contexts. ref_genome BSGenome reference genome use.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_plot_snv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot SNV Mutation Characteristics — sig_plot_snv","text":"list four ggplot2 objects: p_heatmap: SNV mutation matrix heatmap. especially usefull looking wide mutational context. p_river: SNV mutation matrix riverplot. especially usefull looking wide mutational context. p_96_profile: relative contribution 96 trinucleotides. p_spectrum: point mutation spectrum.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_workflow_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run MutationalPatterns Workflow — sig_workflow_run","title":"Run MutationalPatterns Workflow — sig_workflow_run","text":"Runs MutationalPatterns Workflow.","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_workflow_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run MutationalPatterns Workflow — sig_workflow_run","text":"","code":"sig_workflow_run(vcf, sample_nm, ref_genome = \"hg38\", outdir)"},{"path":"https://umccr.github.io/gpgr/reference/sig_workflow_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run MutationalPatterns Workflow — sig_workflow_run","text":"vcf VCF file SNVs. sample_nm Sample name. ref_genome Human genome assembly string: hg38 (default), hg19 GRCh37. outdir Directory path output results .","code":""},{"path":"https://umccr.github.io/gpgr/reference/sig_workflow_run.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run MutationalPatterns Workflow — sig_workflow_run","text":"Writes plots signature contribution tables outdir.","code":""},{"path":"https://umccr.github.io/gpgr/reference/split_double_col.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Two-Field Column — split_double_col","title":"Split Two-Field Column — split_double_col","text":"Splits column 2 comma-separated fields two columns.","code":""},{"path":"https://umccr.github.io/gpgr/reference/split_double_col.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Two-Field Column — split_double_col","text":"","code":"split_double_col(d, nms)"},{"path":"https://umccr.github.io/gpgr/reference/split_double_col.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Two-Field Column — split_double_col","text":"d Input tibble data. nms character vector columns split.","code":""},{"path":"https://umccr.github.io/gpgr/reference/split_double_col.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Two-Field Column — split_double_col","text":"modified tibble original columns averaged split nicely.","code":""},{"path":"https://umccr.github.io/gpgr/reference/split_double_col.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split Two-Field Column — split_double_col","text":"","code":"x <- tibble::tibble(   a = letters[1:11],   b = c(\"0.4,0.8\", paste0(round(runif(10), 2), \",\", round(runif(10), 2))),   nacol = rep(NA, 11),   namix = sample(c(NA, \"0.4,0.6\"), 11, replace = TRUE) ) (b <- gpgr:::split_double_col(x, \"b\")) #> # A tibble: 11 × 1 #>    b                 #>    <chr>             #>  1 0.6 (0.4, 0.8)    #>  2 0.46 (0.63, 0.29) #>  3 0.2 (0.18, 0.21)  #>  4 0.58 (0.38, 0.79) #>  5 0.27 (0.12, 0.42) #>  6 0.54 (0.22, 0.86) #>  7 0.08 (0.04, 0.12) #>  8 0.9 (0.94, 0.85)  #>  9 0.3 (0.51, 0.09)  #> 10 0.22 (0.39, 0.04) #> 11 0.46 (0.7, 0.23)  (nacol <- gpgr:::split_double_col(x, \"nacol\")) #> # A tibble: 11 × 1 #>    nacol #>    <chr> #>  1 NA    #>  2 NA    #>  3 NA    #>  4 NA    #>  5 NA    #>  6 NA    #>  7 NA    #>  8 NA    #>  9 NA    #> 10 NA    #> 11 NA    (namix <- gpgr:::split_double_col(x, \"namix\")) #> # A tibble: 11 × 1 #>    namix          #>    <chr>          #>  1 NA             #>  2 0.5 (0.4, 0.6) #>  3 NA             #>  4 NA             #>  5 NA             #>  6 0.5 (0.4, 0.6) #>  7 0.5 (0.4, 0.6) #>  8 NA             #>  9 0.5 (0.4, 0.6) #> 10 0.5 (0.4, 0.6) #> 11 NA"},{"path":"https://umccr.github.io/gpgr/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"https://www.tidyverse.org/blog/2019/06/rlang-0-4-0/","code":""},{"path":"https://umccr.github.io/gpgr/reference/tsv_is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the TSV file contain any non-header rows? — tsv_is_empty","title":"Does the TSV file contain any non-header rows? — tsv_is_empty","text":"Checks TSV file contains non-header rows.","code":""},{"path":"https://umccr.github.io/gpgr/reference/tsv_is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the TSV file contain any non-header rows? — tsv_is_empty","text":"","code":"tsv_is_empty(   x,   comment = \"##\",   col_types = readr::cols(.default = \"c\"),   n_max = 1,   ... )"},{"path":"https://umccr.github.io/gpgr/reference/tsv_is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the TSV file contain any non-header rows? — tsv_is_empty","text":"x Path TSV file. comment Taken readr::read_tsv(). col_types Taken readr::read_tsv(). n_max Taken readr::read_tsv(). ... arguments passed readr::read_tsv().","code":""},{"path":"https://umccr.github.io/gpgr/reference/tsv_is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the TSV file contain any non-header rows? — tsv_is_empty","text":"TRUE least one non-header row TSV, FALSE otherwise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/tsv_is_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the TSV file contain any non-header rows? — tsv_is_empty","text":"","code":"tmp1 <- tempfile() writeLines(c(\"col1\\tcol2\\tcol3\", \"1\\t2\\t3\"), con = tmp1) (a <- tsv_is_empty(tmp1)) #> [1] FALSE  tmp2 <- tempfile() writeLines(c(\"col1\\tcol2\\tcol3\"), con = tmp2) (b <- tsv_is_empty(tmp2)) #> /tmp/RtmppAFCDL/file200f67c723e3 does not contain any non-header rows. #> [1] TRUE  tmp3 <- tempfile() writeLines(c(\"##meta1\", \"##meta2\", \"col1\\tcol2\\tcol3\"), con = tmp3) (c <- tsv_is_empty(tmp3)) #> /tmp/RtmppAFCDL/file200f478e49f3 does not contain any non-header rows. #> [1] TRUE"},{"path":"https://umccr.github.io/gpgr/reference/umccrise_read_sv_tsv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read SV TSV — umccrise_read_sv_tsv","title":"Read SV TSV — umccrise_read_sv_tsv","text":"Reads Manta TSV file output umccrise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/umccrise_read_sv_tsv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read SV TSV — umccrise_read_sv_tsv","text":"","code":"umccrise_read_sv_tsv(x)"},{"path":"https://umccr.github.io/gpgr/reference/umccrise_read_sv_tsv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read SV TSV — umccrise_read_sv_tsv","text":"x Path manta.tsv output umccrise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/umccrise_read_sv_tsv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read SV TSV — umccrise_read_sv_tsv","text":"tibble corresponding input TSV file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/umccrise_read_sv_tsv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read SV TSV — umccrise_read_sv_tsv","text":"","code":"x <- system.file(\"extdata/umccrise/sv/manta.tsv\", package = \"gpgr\") (sv <- umccrise_read_sv_tsv(x)$data) #> # A tibble: 58 × 23 #>    caller sample  chrom   start     end svtype split_read_supp… paired_support_… #>    <chr>  <chr>   <chr>   <int>   <int> <chr>  <chr>            <chr>            #>  1 manta  sampleA chr1   3.66e6  6.61e6 DEL    73,27            NA               #>  2 manta  sampleA chr1   2.44e8  2.44e8 DEL    86,34            NA               #>  3 manta  sampleA chr2   5.15e7  5.17e7 DEL    79,36            NA               #>  4 manta  sampleA chr3   1.43e8  1.43e8 DEL    82,18            NA               #>  5 manta  sampleA chr4   5.02e7  5.12e7 DEL    NA               NA               #>  6 manta  sampleA chr4   1.08e8  1.08e8 DEL    87,39            NA               #>  7 manta  sampleA chr4   1.29e8  1.30e8 DEL    92,33            NA               #>  8 manta  sampleA chr6   2.99e7  3.03e7 DEL    53,35            NA               #>  9 manta  sampleA chr6   3.09e7  3.17e7 DEL    76,29            NA               #> 10 manta  sampleA chr6   6.98e7  6.98e7 DUP    133,25           NA               #> # … with 48 more rows, and 15 more variables: paired_support_PR <chr>, #> #   AF_BPI <chr>, somaticscore <int>, tier <chr>, annotation <chr>, #> #   AF_PURPLE <chr>, CN_PURPLE <chr>, CN_change_PURPLE <chr>, #> #   Ploidy_PURPLE <dbl>, PURPLE_status <chr>, START_BPI <int>, END_BPI <int>, #> #   ID <chr>, MATEID <chr>, ALT <chr>"},{"path":"https://umccr.github.io/gpgr/reference/vcf_is_empty.html","id":null,"dir":"Reference","previous_headings":"","what":"Does the VCF file contain any variants? — vcf_is_empty","title":"Does the VCF file contain any variants? — vcf_is_empty","text":"Checks VCF file contains variants.","code":""},{"path":"https://umccr.github.io/gpgr/reference/vcf_is_empty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Does the VCF file contain any variants? — vcf_is_empty","text":"","code":"vcf_is_empty(x)"},{"path":"https://umccr.github.io/gpgr/reference/vcf_is_empty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Does the VCF file contain any variants? — vcf_is_empty","text":"x Path VCF file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/vcf_is_empty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Does the VCF file contain any variants? — vcf_is_empty","text":"TRUE least one variant VCF, FALSE otherwise.","code":""},{"path":"https://umccr.github.io/gpgr/reference/vcf_is_empty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Does the VCF file contain any variants? — vcf_is_empty","text":"","code":"x <- system.file(\"extdata/umccrise/snv/somatic-ensemble-PASS.vcf.gz\", package = \"gpgr\") (y <- vcf_is_empty(x)) #> [1] FALSE  tmp1 <- tempfile(pattern = \"fakeFile\", fileext = \"vcf\") writeLines(c(\"col1\\tcol2\\tcol3\", \"1\\t2\\t3\"), con = tmp1) if (FALSE) { vcf_is_empty(tmp1) }  vcf_cols <- c(   \"#CHROM\", \"POS\", \"ID\", \"REF\", \"ALT\", \"QUAL\",   \"FILTER\", \"INFO\", \"FORMAT\" ) tmp2 <- tempfile(pattern = \"fakeFile\", fileext = \"vcf\") writeLines(paste(vcf_cols, collapse = \"\\t\"), con = tmp2) (z <- vcf_is_empty(tmp2)) #> /tmp/RtmppAFCDL/fakeFile200f74adbf76vcf does not contain any non-header rows. #> [1] TRUE  tmp3 <- tempfile(pattern = \"fakeFile\", fileext = \"FOO\") writeLines(paste(vcf_cols, collapse = \"\\t\"), con = tmp3) if (FALSE) { vcf_is_empty(tmp3) }"},{"path":"https://umccr.github.io/gpgr/reference/write_jsongz.html","id":null,"dir":"Reference","previous_headings":"","what":"Write gzipped JSON — write_jsongz","title":"Write gzipped JSON — write_jsongz","text":"Serializes object JSON writes gzipped file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_jsongz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write gzipped JSON — write_jsongz","text":"","code":"write_jsongz(x, path, ...)"},{"path":"https://umccr.github.io/gpgr/reference/write_jsongz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write gzipped JSON — write_jsongz","text":"x object serialized JSON. path File disk (end '.gz'). ... Additional arguments passed jsonlite::write_json()","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_tsvgz.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a data frame to a tab delimited gzipped file — write_tsvgz","title":"Write a data frame to a tab delimited gzipped file — write_tsvgz","text":"Writes data frame tab delimited gzipped file.","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_tsvgz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a data frame to a tab delimited gzipped file — write_tsvgz","text":"","code":"write_tsvgz(x, file, ...)"},{"path":"https://umccr.github.io/gpgr/reference/write_tsvgz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a data frame to a tab delimited gzipped file — write_tsvgz","text":"x data frame tibble write disk. file File connection write (end '.gz'). ... Additional arguments passed readr::write_tsv().","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_tsvgz.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a data frame to a tab delimited gzipped file — write_tsvgz","text":"Returns input x invisibly.","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_tsvjsongz.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a data frame to gzipped TSV and JSON files — write_tsvjsongz","title":"Write a data frame to gzipped TSV and JSON files — write_tsvjsongz","text":"Writes data frame gzipped TSV JSON files. Files written maindir/<path>.tsv.gz maindir/json/<path>.json.gz.","code":""},{"path":"https://umccr.github.io/gpgr/reference/write_tsvjsongz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a data frame to gzipped TSV and JSON files — write_tsvjsongz","text":"","code":"write_tsvjsongz(x, path, maindir)"},{"path":"https://umccr.github.io/gpgr/reference/write_tsvjsongz.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a data frame to gzipped TSV and JSON files — write_tsvjsongz","text":"x data frame write. path Relative path write files , sans file extensions - appended appropriately. maindir Main directory write files .","code":""},{"path":"https://umccr.github.io/gpgr/news/index.html","id":"gpgr-020-2021-11-23","dir":"Changelog","previous_headings":"","what":"gpgr 0.2.0 (2021-11-23)","title":"gpgr 0.2.0 (2021-11-23)","text":"new release year freezer ⭐ add CLI CHORD, HRDetect MutationalPatterns. (pr26, pr28, issue17) ⭐ add 6 new SBS signatures March 2021 COSMIC release (v3.2). (issue22, pr23) ⭐ update use base pipe operator (|>) introduced R 4.1. (pr24) ⭐ add handy get_genome_obj function returns BSgenome object, provided ‘hgXX’ string (useful MutationalPatterns & CHORD). (pr20) ⭐ add handy pkg_exists function checks specified R package exists local system. (pr20) ❓ add readr::local_edition(1) readr::read_tsv due readr using vroom hood (’m comfortable , anyway). See https://www.tidyverse.org/blog/2021/07/readr-2-0-0/#readr-2nd-edition. think happens ’m using comment parameter read gzipped VCF. Oh well. (pr21) 🔧 use bumpversion updating pkg versions. (issue18, pr19) 🔧 add pre-commit hooks styler. (issue25, pr27)","code":""},{"path":"https://umccr.github.io/gpgr/news/index.html","id":"gpgr-010-2020-11-19","dir":"Changelog","previous_headings":"","what":"gpgr 0.1.0 (2020-11-19)","title":"gpgr 0.1.0 (2020-11-19)","text":"PURPLE CNVs SVs (tables + BND plots) AF (summary + plot) HRD write final tables tsv + json Support MutationalPatterns v3.0 (https://github.com/UMCUGenetics/MutationalPatterns) Support PURPLE v2.51+","code":""},{"path":"https://umccr.github.io/gpgr/news/index.html","id":"gpgr-006-2020-10-09","dir":"Changelog","previous_headings":"","what":"gpgr 0.0.6 (2020-10-09)","title":"gpgr 0.0.6 (2020-10-09)","text":"Support CHORD (https://github.com/UMCUGenetics/CHORD) Support HRDetect (https://github.com/Nik-Zainal-Group/signature.tools.lib) Support PURPLE (https://github.com/hartwigmedical/hmftools/tree/master/purple) R package webpage deployed via GitHub Actions https://umccr.github.io/gpgr/","code":""}]
